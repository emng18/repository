{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "from sklearn.linear_model import LogisticRegression \n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.model_selection import StratifiedKFold\n",
    "from sklearn import metrics\n",
    "from sklearn import tree\n",
    "from sklearn.ensemble import RandomForestClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "test=pd.read_csv(\"test_loan.csv\")\n",
    "train=pd.read_csv(\"train_loan.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index([u'Loan_ID', u'Gender', u'Married', u'Dependents', u'Education',\n",
       "       u'Self_Employed', u'ApplicantIncome', u'CoapplicantIncome',\n",
       "       u'LoanAmount', u'Loan_Amount_Term', u'Credit_History', u'Property_Area',\n",
       "       u'Loan_Status'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Loan_ID               object\n",
       "Gender                object\n",
       "Married               object\n",
       "Dependents            object\n",
       "Education             object\n",
       "Self_Employed         object\n",
       "ApplicantIncome        int64\n",
       "CoapplicantIncome    float64\n",
       "LoanAmount           float64\n",
       "Loan_Amount_Term     float64\n",
       "Credit_History       float64\n",
       "Property_Area         object\n",
       "Loan_Status           object\n",
       "dtype: object"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.dtypes\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Y    0.687296\n",
       "N    0.312704\n",
       "Name: Loan_Status, dtype: float64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train[\"Loan_Status\"].value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0xd2320b8>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXoAAAD5CAYAAAAp8/5SAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4zLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvIxREBQAAD5RJREFUeJzt3X+MZWV9x/H3p7uIVlF+DYTubrpEt6nYxpVMkYR/LJgK2HSxkQZidGO2WU0wwWjagk38kZYE0wqtSUuyFstqrLDxR9gobaWAsf4hOOiKIBK2SN1xN+xYfigSaRe+/WOeDeMyzNyZO3cv++z7ldzcc77nOfd+J9l85uTZc+ZJVSFJ6tevjbsBSdJoGfSS1DmDXpI6Z9BLUucMeknqnEEvSZ0z6CWpcwa9JHXOoJekzq0edwMAJ598cq1fv37cbUjSEeXuu+/+aVVNLDbuRRH069evZ2pqatxtSNIRJcl/DzLOqRtJ6pxBL0mdM+glqXMGvSR1zqCXpM4Z9JLUOYNekjpn0EtS514UD0wdKdZf8dVxt9CVh69+67hbkI4KXtFLUucMeknqnEEvSZ0z6CWpcwa9JHXOoJekzhn0ktS5gYM+yaok303ylbZ/epI7kzyY5KYkL2n1Y9v+7nZ8/WhalyQNYilX9JcD98/Z/zhwbVVtAB4DtrT6FuCxqnoNcG0bJ0kak4GCPsla4K3AP7X9AOcCX2hDtgMXte1NbZ92/Lw2XpI0BoNe0f8d8OfAs23/JODxqjrQ9qeBNW17DbAHoB1/oo3/FUm2JplKMjUzM7PM9iVJi1k06JP8IbC/qu6eW55naA1w7LlC1baqmqyqyYmJRRcxlyQt0yB/1Owc4I+SXAi8FHgls1f4xydZ3a7a1wJ72/hpYB0wnWQ18Crg0RXvXJI0kEWv6KvqyqpaW1XrgUuA26vqHcAdwNvbsM3AzW17Z9unHb+9qp53RS9JOjyGuY/+L4APJNnN7Bz89a1+PXBSq38AuGK4FiVJw1jS36Ovqq8DX2/bDwFnzTPml8DFK9CbJGkF+GSsJHXOoJekzhn0ktQ5g16SOmfQS1LnDHpJ6pxBL0mdM+glqXMGvSR1zqCXpM4Z9JLUOYNekjpn0EtS5wx6SeqcQS9JnRtkzdiXJrkryfeS3JfkY61+Q5IfJdnVXhtbPUk+mWR3knuSnDnqH0KS9MIGWXjkaeDcqnoyyTHAN5P8azv2Z1X1hUPGXwBsaK83Ate1d0nSGAyyZmxV1ZNt95j2WmgN2E3AZ9p532J2EfHThm9VkrQcA83RJ1mVZBewH7i1qu5sh65q0zPXJjm21dYAe+acPt1qkqQxGCjoq+qZqtoIrAXOSvI7wJXAbwO/B5zI7GLhAJnvIw4tJNmaZCrJ1MzMzLKalyQtbkl33VTV48wuDn5+Ve1r0zNPA//McwuFTwPr5py2Ftg7z2dtq6rJqpqcmJhYVvOSpMUNctfNRJLj2/bLgDcDPzw4754kwEXAve2UncC72t03ZwNPVNW+kXQvSVrUIHfdnAZsT7KK2V8MO6rqK0luTzLB7FTNLuC9bfwtwIXAbuAp4N0r37YkaVCLBn1V3QO8YZ76uS8wvoDLhm9NkrQSfDJWkjpn0EtS5wx6SeqcQS9JnTPoJalzBr0kdc6gl6TOGfSS1DmDXpI6Z9BLUucMeknqnEEvSZ0z6CWpcwa9JHXOoJekzhn0ktS5QZYSfGmSu5J8L8l9ST7W6qcnuTPJg0luSvKSVj+27e9ux9eP9keQJC1kkCv6p4Fzq+r1wEbg/LYW7MeBa6tqA/AYsKWN3wI8VlWvAa5t4yRJY7Jo0NesJ9vuMe1VwLnAF1p9O7MLhANsavu04+e1BcQlSWMw0Bx9klVJdgH7gVuB/wIer6oDbcg0sKZtrwH2ALTjTwAnzfOZW5NMJZmamZkZ7qeQJL2ggYK+qp6pqo3AWuAs4LXzDWvv81291/MKVduqarKqJicmJgbtV5K0REu666aqHge+DpwNHJ9kdTu0FtjbtqeBdQDt+KuAR1eiWUnS0g1y181EkuPb9suANwP3A3cAb2/DNgM3t+2dbZ92/Paqet4VvSTp8Fi9+BBOA7YnWcXsL4YdVfWVJD8Abkzy18B3gevb+OuBzybZzeyV/CUj6FuSNKBFg76q7gHeME/9IWbn6w+t/xK4eEW6kyQNzSdjJalzBr0kdc6gl6TOGfSS1DmDXpI6Z9BLUucMeknqnEEvSZ0z6CWpcwa9JHXOoJekzhn0ktQ5g16SOmfQS1LnDHpJ6twgK0ytS3JHkvuT3Jfk8lb/aJKfJNnVXhfOOefKJLuTPJDkLaP8ASRJCxtkhakDwAer6jtJjgPuTnJrO3ZtVf3t3MFJzmB2VanXAb8B/EeS36qqZ1aycUnSYBa9oq+qfVX1nbb9c2bXi12zwCmbgBur6umq+hGwm3lWopIkHR5LmqNPsp7ZZQXvbKX3JbknyaeTnNBqa4A9c06bZuFfDJKkERo46JO8Avgi8P6q+hlwHfBqYCOwD/jEwaHznF7zfN7WJFNJpmZmZpbcuCRpMAMFfZJjmA35z1XVlwCq6pGqeqaqngU+xXPTM9PAujmnrwX2HvqZVbWtqiaranJiYmKYn0GStIBB7roJcD1wf1VdM6d+2pxhbwPubds7gUuSHJvkdGADcNfKtSxJWopB7ro5B3gn8P0ku1rtQ8ClSTYyOy3zMPAegKq6L8kO4AfM3rFzmXfcSNL4LBr0VfVN5p93v2WBc64CrhqiL0nSCvHJWEnqnEEvSZ0z6CWpcwa9JHXOoJekzhn0ktQ5g16SOmfQS1LnDHpJ6pxBL0mdM+glqXMGvSR1zqCXpM4Z9JLUOYNekjpn0EtS5wZZSnBdkjuS3J/kviSXt/qJSW5N8mB7P6HVk+STSXYnuSfJmaP+ISRJL2yQK/oDwAer6rXA2cBlSc4ArgBuq6oNwG1tH+ACZteJ3QBsBa5b8a4lSQNbNOiral9Vfadt/xy4H1gDbAK2t2HbgYva9ibgMzXrW8DxhywkLkk6jJY0R59kPfAG4E7g1KraB7O/DIBT2rA1wJ45p0232qGftTXJVJKpmZmZpXcuSRrIwEGf5BXAF4H3V9XPFho6T62eV6jaVlWTVTU5MTExaBuSpCUaKOiTHMNsyH+uqr7Uyo8cnJJp7/tbfRpYN+f0tcDelWlXkrRUg9x1E+B64P6qumbOoZ3A5ra9Gbh5Tv1d7e6bs4EnDk7xSJIOv9UDjDkHeCfw/SS7Wu1DwNXAjiRbgB8DF7djtwAXAruBp4B3r2jHkp5n/RVfHXcLXXn46reOu4UVtWjQV9U3mX/eHeC8ecYXcNmQfUmSVohPxkpS5wx6SeqcQS9JnTPoJalzBr0kdc6gl6TOGfSS1DmDXpI6Z9BLUucMeknqnEEvSZ0z6CWpcwa9JHXOoJekzhn0ktQ5g16SOjfIUoKfTrI/yb1zah9N8pMku9rrwjnHrkyyO8kDSd4yqsYlSYMZ5Ir+BuD8eerXVtXG9roFIMkZwCXA69o5/5hk1Uo1K0laukWDvqq+ATw64OdtAm6sqqer6kfMrht71hD9SZKGNMwc/fuS3NOmdk5otTXAnjljplvteZJsTTKVZGpmZmaINiRJC1lu0F8HvBrYCOwDPtHq8y0iXvN9QFVtq6rJqpqcmJhYZhuSpMUsK+ir6pGqeqaqngU+xXPTM9PAujlD1wJ7h2tRkjSMZQV9ktPm7L4NOHhHzk7gkiTHJjkd2ADcNVyLkqRhrF5sQJLPA28CTk4yDXwEeFOSjcxOyzwMvAegqu5LsgP4AXAAuKyqnhlN65KkQSwa9FV16Tzl6xcYfxVw1TBNSZJWjk/GSlLnDHpJ6pxBL0mdM+glqXMGvSR1zqCXpM4Z9JLUOYNekjpn0EtS5wx6SeqcQS9JnTPoJalzBr0kdc6gl6TOGfSS1LlFg74t/r0/yb1zaicmuTXJg+39hFZPkk8m2d0WDj9zlM1LkhY3yBX9DcD5h9SuAG6rqg3AbW0f4AJmlw/cAGxldhFxSdIYLRr0VfUN4NFDypuA7W17O3DRnPpnata3gOMPWV9WknSYLXeO/tSq2gfQ3k9p9TXAnjnjplvteZJsTTKVZGpmZmaZbUiSFrPS/xmbeWo138Cq2lZVk1U1OTExscJtSJIOWm7QP3JwSqa972/1aWDdnHFrgb3Lb0+SNKzlBv1OYHPb3gzcPKf+rnb3zdnAEweneCRJ47F6sQFJPg+8CTg5yTTwEeBqYEeSLcCPgYvb8FuAC4HdwFPAu0fQsyRpCRYN+qq69AUOnTfP2AIuG7YpSdLK8clYSeqcQS9JnTPoJalzBr0kdc6gl6TOGfSS1DmDXpI6Z9BLUucMeknqnEEvSZ0z6CWpcwa9JHXOoJekzhn0ktQ5g16SOmfQS1LnFl14ZCFJHgZ+DjwDHKiqySQnAjcB64GHgT+pqseGa1OStFwrcUX/+1W1saom2/4VwG1VtQG4re1LksZkFFM3m4DtbXs7cNEIvkOSNKBhg76AryW5O8nWVju1qvYBtPdT5jsxydYkU0mmZmZmhmxDkvRChpqjB86pqr1JTgFuTfLDQU+sqm3ANoDJyckasg9J0gsY6oq+qva29/3Al4GzgEeSnAbQ3vcP26QkafmWHfRJXp7kuIPbwB8A9wI7gc1t2Gbg5mGblCQt3zBTN6cCX05y8HP+par+Lcm3gR1JtgA/Bi4evk1J0nItO+ir6iHg9fPU/wc4b5imJEkrxydjJalzBr0kdc6gl6TOGfSS1DmDXpI6Z9BLUucMeknqnEEvSZ0z6CWpcwa9JHXOoJekzhn0ktQ5g16SOmfQS1LnDHpJ6tzIgj7J+UkeSLI7yRWj+h5J0sJGEvRJVgH/AFwAnAFcmuSMUXyXJGlho7qiPwvYXVUPVdX/AjcCm0b0XZKkBQyzZuxC1gB75uxPA2+cOyDJVmBr230yyQMj6uVodDLw03E3sZh8fNwdaAz8t7myfnOQQaMK+sxTq1/ZqdoGbBvR9x/VkkxV1eS4+5AO5b/N8RjV1M00sG7O/lpg74i+S5K0gFEF/beBDUlOT/IS4BJg54i+S5K0gJFM3VTVgSTvA/4dWAV8uqruG8V3aV5OienFyn+bY5CqWnyUJOmI5ZOxktQ5g16SOmfQH8GS3JJk/bj7kPTiZtAf2W4AvpbkL5McM+5mJL04+Z+xR7gkLwc+DJwPfBZ49uCxqrpmXH1JevEY1ZOxOnz+D/gFcCxwHHOCXhqnJB9e4HBV1V8dtmaOcgb9ESzJ+cA1zD6MdmZVPTXmlqS5fjFP7deBPwVOAgz6w8SpmyNYkv8E3uvDaHqxS3IccDmwBdgBfKKq9o+3q6OHQS9pZJKcCHwAeAewHfj7qnpsvF0dfZy6kTQSSf4G+GNm/+zB71bVk2Nu6ajlFb2kkUjyLPA0cIBf/TPlYfY/Y185lsaOQga9JHXOB6YkqXMGvSR1zqCXpM4Z9JLUuf8HUF/2Hl7piKUAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "train[\"Loan_Status\"].value_counts().plot.bar()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0xd6e7cc0>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplot(221)\n",
    "train[\"Gender\"].value_counts(normalize=True).plot.bar(title=\"Gender\")\n",
    "plt.subplot(222)\n",
    "train[\"Married\"].value_counts(normalize=True).plot.bar(title=\"Married\")\n",
    "plt.subplot(223)\n",
    "train[\"Self_Employed\"].value_counts(normalize=True).plot.bar(title=\"SE\")\n",
    "plt.subplot(224)\n",
    "train[\"Credit_History\"].value_counts(normalize=True).plot.bar(title=\"CH\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0xda61e48>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x360 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplot(131)\n",
    "train[\"Dependents\"].value_counts(normalize=True).plot.bar(figsize=(16,5),title=\"Dependents\")\n",
    "plt.subplot(132)\n",
    "train[\"Education\"].value_counts(normalize=True).plot.bar(title=\"education\")\n",
    "plt.subplot(133)\n",
    "train[\"Property_Area\"].value_counts(normalize=True).plot.bar(title=\"prop area\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0xee1ffd0>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplot(121)\n",
    "sns.distplot(train[\"ApplicantIncome\"])\n",
    "plt.subplot(122)\n",
    "train[\"ApplicantIncome\"].plot.box(figsize=(10,5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0xef599e8>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "train.boxplot(column=\"ApplicantIncome\",by=\"Education\", figsize=(10,5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Loan_Status</th>\n",
       "      <th>N</th>\n",
       "      <th>Y</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gender</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Female</th>\n",
       "      <td>0.330357</td>\n",
       "      <td>0.669643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>0.306748</td>\n",
       "      <td>0.693252</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Loan_Status         N         Y\n",
       "Gender                         \n",
       "Female       0.330357  0.669643\n",
       "Male         0.306748  0.693252"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gender = pd.crosstab(train[\"Gender\"],train[\"Loan_Status\"])\n",
    "gender.head(2)\n",
    "gender2=gender.div(gender.sum(1),axis=0)\n",
    "gender2.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Loan_Status</th>\n",
       "      <th>N</th>\n",
       "      <th>Y</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gender</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Female</th>\n",
       "      <td>37</td>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>150</td>\n",
       "      <td>339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Loan_Status    N    Y\n",
       "Gender               \n",
       "Female        37   75\n",
       "Male         150  339"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gender.head(2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Gender\n",
       "Female    112\n",
       "Male      489\n",
       "dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gender3=gender.sum(1)\n",
    "gender3\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0xf3974e0>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "gender2.plot.bar(stacked=True,title=\"gender crosstab\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0xf52edd8>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "married=pd.crosstab(train[\"Married\"],train[\"Loan_Status\"])\n",
    "married.div(married.sum(1),axis=0).plot.bar(stacked=True,title=\"married vs loan status\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0xf6df668>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "dependents=pd.crosstab(train[\"Dependents\"],train[\"Loan_Status\"])\n",
    "dependents.div(dependents.sum(1),axis=0).plot.bar(stacked=True,title=\"dependents vs loan status\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Loan_Status</th>\n",
       "      <th>N</th>\n",
       "      <th>Y</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dependents</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>107</td>\n",
       "      <td>238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>36</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>25</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3+</th>\n",
       "      <td>18</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Loan_Status    N    Y\n",
       "Dependents           \n",
       "0            107  238\n",
       "1             36   66\n",
       "2             25   76\n",
       "3+            18   33"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dependents\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "81000"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "income=train.groupby(\"Loan_Status\")[\"ApplicantIncome\"].mean()\n",
    "income.head(4)\n",
    "train[\"ApplicantIncome\"].max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0xf8a4fd0>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "income.plot.bar()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "bins = [0,2500, 4000, 6000, 81000]\n",
    "groups = [\"low\",\"average\",\"high\",\"very high\"]\n",
    "income2=pd.cut(train[\"ApplicantIncome\"],bins,labels=groups)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count         614\n",
       "unique          4\n",
       "top       average\n",
       "freq          226\n",
       "Name: ApplicantIncome, dtype: object"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "income2.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count      614.000000\n",
       "mean      5403.459283\n",
       "std       6109.041673\n",
       "min        150.000000\n",
       "25%       2877.500000\n",
       "50%       3812.500000\n",
       "75%       5795.000000\n",
       "max      81000.000000\n",
       "Name: ApplicantIncome, dtype: float64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train[\"ApplicantIncome\"].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "binss=[0,2500,4000,6000,81000] \n",
    "groups=['Low','Average','High', 'Very high'] \n",
    "train[\"incomebin\"]=pd.cut(train['ApplicantIncome'],binss,labels=groups)\n",
    "\n",
    "\n",
    "income_bin=pd.crosstab(income2,train[\"Loan_Status\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0xfa956d8>"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "income_bin.div(income_bin.sum(1),axis=0).plot.bar(stacked=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "train[\"totalincome\"]=train[\"ApplicantIncome\"]+train[\"CoapplicantIncome\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count           614\n",
       "unique            4\n",
       "top       Very high\n",
       "freq            247\n",
       "Name: totalincome, dtype: object"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "totalincome=pd.cut(train[\"totalincome\"],bins,labels=groups)\n",
    "totalincome.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "totalincome_bin=pd.crosstab(totalincome,train[\"Loan_Status\"])\n",
    "bins2=[0,2500,4000,6000,81000] \n",
    "group2=['Low','Average','High', 'Very high'] \n",
    "train[\"totalincomebin\"]=pd.cut(train[\"totalincome\"],bins2,labels=group2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x100394a8>"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "totalincome_bin.div(totalincome_bin.sum(1),axis=0).plot.bar(stacked=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "bins = [0,100,200,700]\n",
    "groups = [\"low\",\"average\",\"high\"]\n",
    "train[\"loanamountbin\"]=pd.cut(train[\"LoanAmount\"],bins,labels=groups)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "loanamountbin=pd.crosstab(train[\"loanamountbin\"],train[\"Loan_Status\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Loan_Status</th>\n",
       "      <th>N</th>\n",
       "      <th>Y</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>loanamountbin</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>low</th>\n",
       "      <td>47</td>\n",
       "      <td>107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>average</th>\n",
       "      <td>103</td>\n",
       "      <td>255</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>high</th>\n",
       "      <td>31</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Loan_Status      N    Y\n",
       "loanamountbin          \n",
       "low             47  107\n",
       "average        103  255\n",
       "high            31   49"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "loanamountbin.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "loanamountbin\n",
       "low        154\n",
       "average    358\n",
       "high        80\n",
       "dtype: int64"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "loanamountbin.sum(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x102bcf60>"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x144 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "loanamountbin.div(loanamountbin.sum(1),axis=0).plot.bar(stacked=True,figsize=(5,2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "      <th>Loan_Status</th>\n",
       "      <th>incomebin</th>\n",
       "      <th>totalincome</th>\n",
       "      <th>totalincomebin</th>\n",
       "      <th>loanamountbin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>LP001002</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5849</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "      <td>High</td>\n",
       "      <td>5849.0</td>\n",
       "      <td>High</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>LP001003</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4583</td>\n",
       "      <td>1508.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "      <td>High</td>\n",
       "      <td>6091.0</td>\n",
       "      <td>Very high</td>\n",
       "      <td>average</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>LP001005</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "      <td>Average</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>Average</td>\n",
       "      <td>low</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>LP001006</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2583</td>\n",
       "      <td>2358.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "      <td>Average</td>\n",
       "      <td>4941.0</td>\n",
       "      <td>High</td>\n",
       "      <td>average</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Loan_ID Gender Married Dependents     Education Self_Employed  \\\n",
       "0  LP001002   Male      No          0      Graduate            No   \n",
       "1  LP001003   Male     Yes          1      Graduate            No   \n",
       "2  LP001005   Male     Yes          0      Graduate           Yes   \n",
       "3  LP001006   Male     Yes          0  Not Graduate            No   \n",
       "\n",
       "   ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "0             5849                0.0         NaN             360.0   \n",
       "1             4583             1508.0       128.0             360.0   \n",
       "2             3000                0.0        66.0             360.0   \n",
       "3             2583             2358.0       120.0             360.0   \n",
       "\n",
       "   Credit_History Property_Area Loan_Status incomebin  totalincome  \\\n",
       "0             1.0         Urban           Y      High       5849.0   \n",
       "1             1.0         Rural           N      High       6091.0   \n",
       "2             1.0         Urban           Y   Average       3000.0   \n",
       "3             1.0         Urban           Y   Average       4941.0   \n",
       "\n",
       "  totalincomebin loanamountbin  \n",
       "0           High           NaN  \n",
       "1      Very high       average  \n",
       "2        Average           low  \n",
       "3           High       average  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.head(4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "bins=[0,1000,3000,42000] \n",
    "group=['Low','Average','High'] \n",
    "#train[\"incomebin\"]=pd.cut(train[\"ApplicantIncome\"],bins,labels=group)\n",
    "train[\"CoapplicantIncomebin\"]=pd.cut(train[\"CoapplicantIncome\"],bins,labels=group)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "      <th>Loan_Status</th>\n",
       "      <th>incomebin</th>\n",
       "      <th>totalincome</th>\n",
       "      <th>totalincomebin</th>\n",
       "      <th>loanamountbin</th>\n",
       "      <th>CoapplicantIncomebin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>LP001002</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5849</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "      <td>High</td>\n",
       "      <td>5849.0</td>\n",
       "      <td>High</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>LP001003</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4583</td>\n",
       "      <td>1508.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "      <td>High</td>\n",
       "      <td>6091.0</td>\n",
       "      <td>Very high</td>\n",
       "      <td>average</td>\n",
       "      <td>Average</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>LP001005</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "      <td>Average</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>Average</td>\n",
       "      <td>low</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>LP001006</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2583</td>\n",
       "      <td>2358.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "      <td>Average</td>\n",
       "      <td>4941.0</td>\n",
       "      <td>High</td>\n",
       "      <td>average</td>\n",
       "      <td>Average</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Loan_ID Gender Married Dependents     Education Self_Employed  \\\n",
       "0  LP001002   Male      No          0      Graduate            No   \n",
       "1  LP001003   Male     Yes          1      Graduate            No   \n",
       "2  LP001005   Male     Yes          0      Graduate           Yes   \n",
       "3  LP001006   Male     Yes          0  Not Graduate            No   \n",
       "\n",
       "   ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "0             5849                0.0         NaN             360.0   \n",
       "1             4583             1508.0       128.0             360.0   \n",
       "2             3000                0.0        66.0             360.0   \n",
       "3             2583             2358.0       120.0             360.0   \n",
       "\n",
       "   Credit_History Property_Area Loan_Status incomebin  totalincome  \\\n",
       "0             1.0         Urban           Y      High       5849.0   \n",
       "1             1.0         Rural           N      High       6091.0   \n",
       "2             1.0         Urban           Y   Average       3000.0   \n",
       "3             1.0         Urban           Y   Average       4941.0   \n",
       "\n",
       "  totalincomebin loanamountbin CoapplicantIncomebin  \n",
       "0           High           NaN                  NaN  \n",
       "1      Very high       average              Average  \n",
       "2        Average           low                  NaN  \n",
       "3           High       average              Average  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.head(4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count     599\n",
       "unique      4\n",
       "top         0\n",
       "freq      345\n",
       "Name: Dependents, dtype: object"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train2=train.drop([\"incomebin\",\"CoapplicantIncomebin\",\"loanamountbin\",\"totalincomebin\",\"totalincome\"],axis=1)\n",
    "train2[\"Dependents\"].describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "      <th>Loan_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>LP001002</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5849</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>LP001003</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4583</td>\n",
       "      <td>1508.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>LP001005</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>LP001006</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2583</td>\n",
       "      <td>2358.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>LP001008</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>6000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>141.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>LP001011</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>5417</td>\n",
       "      <td>4196.0</td>\n",
       "      <td>267.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>LP001013</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2333</td>\n",
       "      <td>1516.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>LP001014</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3+</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3036</td>\n",
       "      <td>2504.0</td>\n",
       "      <td>158.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>LP001018</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4006</td>\n",
       "      <td>1526.0</td>\n",
       "      <td>168.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>LP001020</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>12841</td>\n",
       "      <td>10968.0</td>\n",
       "      <td>349.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>LP001024</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3200</td>\n",
       "      <td>700.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>LP001027</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2500</td>\n",
       "      <td>1840.0</td>\n",
       "      <td>109.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>LP001028</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3073</td>\n",
       "      <td>8106.0</td>\n",
       "      <td>200.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>LP001029</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>1853</td>\n",
       "      <td>2840.0</td>\n",
       "      <td>114.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>LP001030</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>1299</td>\n",
       "      <td>1086.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>LP001032</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4950</td>\n",
       "      <td>0.0</td>\n",
       "      <td>125.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>LP001034</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3596</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>LP001036</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3510</td>\n",
       "      <td>0.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>LP001038</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4887</td>\n",
       "      <td>0.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>LP001041</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2600</td>\n",
       "      <td>3500.0</td>\n",
       "      <td>115.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>LP001043</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>7660</td>\n",
       "      <td>0.0</td>\n",
       "      <td>104.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>LP001046</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5955</td>\n",
       "      <td>5625.0</td>\n",
       "      <td>315.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>LP001047</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2600</td>\n",
       "      <td>1911.0</td>\n",
       "      <td>116.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>LP001050</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3365</td>\n",
       "      <td>1917.0</td>\n",
       "      <td>112.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>LP001052</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3717</td>\n",
       "      <td>2925.0</td>\n",
       "      <td>151.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>LP001066</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>9560</td>\n",
       "      <td>0.0</td>\n",
       "      <td>191.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>LP001068</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2799</td>\n",
       "      <td>2253.0</td>\n",
       "      <td>122.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>LP001073</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4226</td>\n",
       "      <td>1040.0</td>\n",
       "      <td>110.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>LP001086</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>1442</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>LP001087</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3750</td>\n",
       "      <td>2083.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>584</th>\n",
       "      <td>LP002911</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2787</td>\n",
       "      <td>1917.0</td>\n",
       "      <td>146.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>585</th>\n",
       "      <td>LP002912</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4283</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>172.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>586</th>\n",
       "      <td>LP002916</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2297</td>\n",
       "      <td>1522.0</td>\n",
       "      <td>104.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>587</th>\n",
       "      <td>LP002917</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2165</td>\n",
       "      <td>0.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>588</th>\n",
       "      <td>LP002925</td>\n",
       "      <td>NaN</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4750</td>\n",
       "      <td>0.0</td>\n",
       "      <td>94.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>589</th>\n",
       "      <td>LP002926</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2726</td>\n",
       "      <td>0.0</td>\n",
       "      <td>106.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>590</th>\n",
       "      <td>LP002928</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3000</td>\n",
       "      <td>3416.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>591</th>\n",
       "      <td>LP002931</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>6000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>205.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>592</th>\n",
       "      <td>LP002933</td>\n",
       "      <td>NaN</td>\n",
       "      <td>No</td>\n",
       "      <td>3+</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>9357</td>\n",
       "      <td>0.0</td>\n",
       "      <td>292.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>593</th>\n",
       "      <td>LP002936</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3859</td>\n",
       "      <td>3300.0</td>\n",
       "      <td>142.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>594</th>\n",
       "      <td>LP002938</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>16120</td>\n",
       "      <td>0.0</td>\n",
       "      <td>260.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>595</th>\n",
       "      <td>LP002940</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3833</td>\n",
       "      <td>0.0</td>\n",
       "      <td>110.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>596</th>\n",
       "      <td>LP002941</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>6383</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>187.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>597</th>\n",
       "      <td>LP002943</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2987</td>\n",
       "      <td>0.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>598</th>\n",
       "      <td>LP002945</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>9963</td>\n",
       "      <td>0.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>599</th>\n",
       "      <td>LP002948</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5780</td>\n",
       "      <td>0.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>600</th>\n",
       "      <td>LP002949</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>3+</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>416</td>\n",
       "      <td>41667.0</td>\n",
       "      <td>350.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>601</th>\n",
       "      <td>LP002950</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2894</td>\n",
       "      <td>2792.0</td>\n",
       "      <td>155.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>602</th>\n",
       "      <td>LP002953</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3+</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5703</td>\n",
       "      <td>0.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>603</th>\n",
       "      <td>LP002958</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3676</td>\n",
       "      <td>4301.0</td>\n",
       "      <td>172.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>604</th>\n",
       "      <td>LP002959</td>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>12000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>496.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>605</th>\n",
       "      <td>LP002960</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2400</td>\n",
       "      <td>3800.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>606</th>\n",
       "      <td>LP002961</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3400</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>173.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>607</th>\n",
       "      <td>LP002964</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3987</td>\n",
       "      <td>1411.0</td>\n",
       "      <td>157.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>608</th>\n",
       "      <td>LP002974</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3232</td>\n",
       "      <td>1950.0</td>\n",
       "      <td>108.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>609</th>\n",
       "      <td>LP002978</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2900</td>\n",
       "      <td>0.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>610</th>\n",
       "      <td>LP002979</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3+</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4106</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>611</th>\n",
       "      <td>LP002983</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>8072</td>\n",
       "      <td>240.0</td>\n",
       "      <td>253.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>612</th>\n",
       "      <td>LP002984</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>7583</td>\n",
       "      <td>0.0</td>\n",
       "      <td>187.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>613</th>\n",
       "      <td>LP002990</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>4583</td>\n",
       "      <td>0.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>614 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Loan_ID  Gender Married Dependents     Education Self_Employed  \\\n",
       "0    LP001002    Male      No          0      Graduate            No   \n",
       "1    LP001003    Male     Yes          1      Graduate            No   \n",
       "2    LP001005    Male     Yes          0      Graduate           Yes   \n",
       "3    LP001006    Male     Yes          0  Not Graduate            No   \n",
       "4    LP001008    Male      No          0      Graduate            No   \n",
       "5    LP001011    Male     Yes          2      Graduate           Yes   \n",
       "6    LP001013    Male     Yes          0  Not Graduate            No   \n",
       "7    LP001014    Male     Yes         3+      Graduate            No   \n",
       "8    LP001018    Male     Yes          2      Graduate            No   \n",
       "9    LP001020    Male     Yes          1      Graduate            No   \n",
       "10   LP001024    Male     Yes          2      Graduate            No   \n",
       "11   LP001027    Male     Yes          2      Graduate           NaN   \n",
       "12   LP001028    Male     Yes          2      Graduate            No   \n",
       "13   LP001029    Male      No          0      Graduate            No   \n",
       "14   LP001030    Male     Yes          2      Graduate            No   \n",
       "15   LP001032    Male      No          0      Graduate            No   \n",
       "16   LP001034    Male      No          1  Not Graduate            No   \n",
       "17   LP001036  Female      No          0      Graduate            No   \n",
       "18   LP001038    Male     Yes          0  Not Graduate            No   \n",
       "19   LP001041    Male     Yes          0      Graduate           NaN   \n",
       "20   LP001043    Male     Yes          0  Not Graduate            No   \n",
       "21   LP001046    Male     Yes          1      Graduate            No   \n",
       "22   LP001047    Male     Yes          0  Not Graduate            No   \n",
       "23   LP001050     NaN     Yes          2  Not Graduate            No   \n",
       "24   LP001052    Male     Yes          1      Graduate           NaN   \n",
       "25   LP001066    Male     Yes          0      Graduate           Yes   \n",
       "26   LP001068    Male     Yes          0      Graduate            No   \n",
       "27   LP001073    Male     Yes          2  Not Graduate            No   \n",
       "28   LP001086    Male      No          0  Not Graduate            No   \n",
       "29   LP001087  Female      No          2      Graduate           NaN   \n",
       "..        ...     ...     ...        ...           ...           ...   \n",
       "584  LP002911    Male     Yes          1      Graduate            No   \n",
       "585  LP002912    Male     Yes          1      Graduate            No   \n",
       "586  LP002916    Male     Yes          0      Graduate            No   \n",
       "587  LP002917  Female      No          0  Not Graduate            No   \n",
       "588  LP002925     NaN      No          0      Graduate            No   \n",
       "589  LP002926    Male     Yes          2      Graduate           Yes   \n",
       "590  LP002928    Male     Yes          0      Graduate            No   \n",
       "591  LP002931    Male     Yes          2      Graduate           Yes   \n",
       "592  LP002933     NaN      No         3+      Graduate           Yes   \n",
       "593  LP002936    Male     Yes          0      Graduate            No   \n",
       "594  LP002938    Male     Yes          0      Graduate           Yes   \n",
       "595  LP002940    Male      No          0  Not Graduate            No   \n",
       "596  LP002941    Male     Yes          2  Not Graduate           Yes   \n",
       "597  LP002943    Male      No        NaN      Graduate            No   \n",
       "598  LP002945    Male     Yes          0      Graduate           Yes   \n",
       "599  LP002948    Male     Yes          2      Graduate            No   \n",
       "600  LP002949  Female      No         3+      Graduate           NaN   \n",
       "601  LP002950    Male     Yes          0  Not Graduate           NaN   \n",
       "602  LP002953    Male     Yes         3+      Graduate            No   \n",
       "603  LP002958    Male      No          0      Graduate            No   \n",
       "604  LP002959  Female     Yes          1      Graduate            No   \n",
       "605  LP002960    Male     Yes          0  Not Graduate            No   \n",
       "606  LP002961    Male     Yes          1      Graduate            No   \n",
       "607  LP002964    Male     Yes          2  Not Graduate            No   \n",
       "608  LP002974    Male     Yes          0      Graduate            No   \n",
       "609  LP002978  Female      No          0      Graduate            No   \n",
       "610  LP002979    Male     Yes         3+      Graduate            No   \n",
       "611  LP002983    Male     Yes          1      Graduate            No   \n",
       "612  LP002984    Male     Yes          2      Graduate            No   \n",
       "613  LP002990  Female      No          0      Graduate           Yes   \n",
       "\n",
       "     ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "0               5849                0.0         NaN             360.0   \n",
       "1               4583             1508.0       128.0             360.0   \n",
       "2               3000                0.0        66.0             360.0   \n",
       "3               2583             2358.0       120.0             360.0   \n",
       "4               6000                0.0       141.0             360.0   \n",
       "5               5417             4196.0       267.0             360.0   \n",
       "6               2333             1516.0        95.0             360.0   \n",
       "7               3036             2504.0       158.0             360.0   \n",
       "8               4006             1526.0       168.0             360.0   \n",
       "9              12841            10968.0       349.0             360.0   \n",
       "10              3200              700.0        70.0             360.0   \n",
       "11              2500             1840.0       109.0             360.0   \n",
       "12              3073             8106.0       200.0             360.0   \n",
       "13              1853             2840.0       114.0             360.0   \n",
       "14              1299             1086.0        17.0             120.0   \n",
       "15              4950                0.0       125.0             360.0   \n",
       "16              3596                0.0       100.0             240.0   \n",
       "17              3510                0.0        76.0             360.0   \n",
       "18              4887                0.0       133.0             360.0   \n",
       "19              2600             3500.0       115.0               NaN   \n",
       "20              7660                0.0       104.0             360.0   \n",
       "21              5955             5625.0       315.0             360.0   \n",
       "22              2600             1911.0       116.0             360.0   \n",
       "23              3365             1917.0       112.0             360.0   \n",
       "24              3717             2925.0       151.0             360.0   \n",
       "25              9560                0.0       191.0             360.0   \n",
       "26              2799             2253.0       122.0             360.0   \n",
       "27              4226             1040.0       110.0             360.0   \n",
       "28              1442                0.0        35.0             360.0   \n",
       "29              3750             2083.0       120.0             360.0   \n",
       "..               ...                ...         ...               ...   \n",
       "584             2787             1917.0       146.0             360.0   \n",
       "585             4283             3000.0       172.0              84.0   \n",
       "586             2297             1522.0       104.0             360.0   \n",
       "587             2165                0.0        70.0             360.0   \n",
       "588             4750                0.0        94.0             360.0   \n",
       "589             2726                0.0       106.0             360.0   \n",
       "590             3000             3416.0        56.0             180.0   \n",
       "591             6000                0.0       205.0             240.0   \n",
       "592             9357                0.0       292.0             360.0   \n",
       "593             3859             3300.0       142.0             180.0   \n",
       "594            16120                0.0       260.0             360.0   \n",
       "595             3833                0.0       110.0             360.0   \n",
       "596             6383             1000.0       187.0             360.0   \n",
       "597             2987                0.0        88.0             360.0   \n",
       "598             9963                0.0       180.0             360.0   \n",
       "599             5780                0.0       192.0             360.0   \n",
       "600              416            41667.0       350.0             180.0   \n",
       "601             2894             2792.0       155.0             360.0   \n",
       "602             5703                0.0       128.0             360.0   \n",
       "603             3676             4301.0       172.0             360.0   \n",
       "604            12000                0.0       496.0             360.0   \n",
       "605             2400             3800.0         NaN             180.0   \n",
       "606             3400             2500.0       173.0             360.0   \n",
       "607             3987             1411.0       157.0             360.0   \n",
       "608             3232             1950.0       108.0             360.0   \n",
       "609             2900                0.0        71.0             360.0   \n",
       "610             4106                0.0        40.0             180.0   \n",
       "611             8072              240.0       253.0             360.0   \n",
       "612             7583                0.0       187.0             360.0   \n",
       "613             4583                0.0       133.0             360.0   \n",
       "\n",
       "     Credit_History Property_Area Loan_Status  \n",
       "0               1.0         Urban           Y  \n",
       "1               1.0         Rural           N  \n",
       "2               1.0         Urban           Y  \n",
       "3               1.0         Urban           Y  \n",
       "4               1.0         Urban           Y  \n",
       "5               1.0         Urban           Y  \n",
       "6               1.0         Urban           Y  \n",
       "7               0.0     Semiurban           N  \n",
       "8               1.0         Urban           Y  \n",
       "9               1.0     Semiurban           N  \n",
       "10              1.0         Urban           Y  \n",
       "11              1.0         Urban           Y  \n",
       "12              1.0         Urban           Y  \n",
       "13              1.0         Rural           N  \n",
       "14              1.0         Urban           Y  \n",
       "15              1.0         Urban           Y  \n",
       "16              NaN         Urban           Y  \n",
       "17              0.0         Urban           N  \n",
       "18              1.0         Rural           N  \n",
       "19              1.0         Urban           Y  \n",
       "20              0.0         Urban           N  \n",
       "21              1.0         Urban           Y  \n",
       "22              0.0     Semiurban           N  \n",
       "23              0.0         Rural           N  \n",
       "24              NaN     Semiurban           N  \n",
       "25              1.0     Semiurban           Y  \n",
       "26              1.0     Semiurban           Y  \n",
       "27              1.0         Urban           Y  \n",
       "28              1.0         Urban           N  \n",
       "29              1.0     Semiurban           Y  \n",
       "..              ...           ...         ...  \n",
       "584             0.0         Rural           N  \n",
       "585             1.0         Rural           N  \n",
       "586             1.0         Urban           Y  \n",
       "587             1.0     Semiurban           Y  \n",
       "588             1.0     Semiurban           Y  \n",
       "589             0.0     Semiurban           N  \n",
       "590             1.0     Semiurban           Y  \n",
       "591             1.0     Semiurban           N  \n",
       "592             1.0     Semiurban           Y  \n",
       "593             1.0         Rural           Y  \n",
       "594             1.0         Urban           Y  \n",
       "595             1.0         Rural           Y  \n",
       "596             1.0         Rural           N  \n",
       "597             0.0     Semiurban           N  \n",
       "598             1.0         Rural           Y  \n",
       "599             1.0         Urban           Y  \n",
       "600             NaN         Urban           N  \n",
       "601             1.0         Rural           Y  \n",
       "602             1.0         Urban           Y  \n",
       "603             1.0         Rural           Y  \n",
       "604             1.0     Semiurban           Y  \n",
       "605             1.0         Urban           N  \n",
       "606             1.0     Semiurban           Y  \n",
       "607             1.0         Rural           Y  \n",
       "608             1.0         Rural           Y  \n",
       "609             1.0         Rural           Y  \n",
       "610             1.0         Rural           Y  \n",
       "611             1.0         Urban           Y  \n",
       "612             1.0         Urban           Y  \n",
       "613             0.0     Semiurban           N  \n",
       "\n",
       "[614 rows x 13 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "train2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "train2[\"Dependents\"].replace(\"3+\",3,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "test['Dependents'].replace('3+', 3,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "train2.replace(\"Y\",1,inplace=True)\n",
    "train2.replace(\"N\",0,inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>LP001015</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5720</td>\n",
       "      <td>0</td>\n",
       "      <td>110.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>LP001022</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3076</td>\n",
       "      <td>1500</td>\n",
       "      <td>126.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>LP001031</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5000</td>\n",
       "      <td>1800</td>\n",
       "      <td>208.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>LP001035</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2340</td>\n",
       "      <td>2546</td>\n",
       "      <td>100.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>LP001051</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3276</td>\n",
       "      <td>0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>LP001054</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2165</td>\n",
       "      <td>3422</td>\n",
       "      <td>152.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>LP001055</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2226</td>\n",
       "      <td>0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>LP001056</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3881</td>\n",
       "      <td>0</td>\n",
       "      <td>147.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Rural</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>LP001059</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13633</td>\n",
       "      <td>0</td>\n",
       "      <td>280.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>LP001067</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2400</td>\n",
       "      <td>2400</td>\n",
       "      <td>123.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>LP001078</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3091</td>\n",
       "      <td>0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>LP001082</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2185</td>\n",
       "      <td>1516</td>\n",
       "      <td>162.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>LP001083</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>3</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4166</td>\n",
       "      <td>0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>LP001094</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12173</td>\n",
       "      <td>0</td>\n",
       "      <td>166.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Semiurban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>LP001096</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4666</td>\n",
       "      <td>0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>LP001099</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5667</td>\n",
       "      <td>0</td>\n",
       "      <td>131.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>LP001105</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4583</td>\n",
       "      <td>2916</td>\n",
       "      <td>200.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>LP001107</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3786</td>\n",
       "      <td>333</td>\n",
       "      <td>126.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>LP001108</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>9226</td>\n",
       "      <td>7916</td>\n",
       "      <td>300.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>LP001115</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>1300</td>\n",
       "      <td>3470</td>\n",
       "      <td>100.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>LP001121</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>1888</td>\n",
       "      <td>1620</td>\n",
       "      <td>48.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>LP001124</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>3</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2083</td>\n",
       "      <td>0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>LP001128</td>\n",
       "      <td>NaN</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3909</td>\n",
       "      <td>0</td>\n",
       "      <td>101.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>LP001135</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3765</td>\n",
       "      <td>0</td>\n",
       "      <td>125.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>LP001149</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5400</td>\n",
       "      <td>4380</td>\n",
       "      <td>290.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>LP001153</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>24000</td>\n",
       "      <td>148.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Rural</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>LP001163</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4363</td>\n",
       "      <td>1250</td>\n",
       "      <td>140.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>LP001169</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>7500</td>\n",
       "      <td>3750</td>\n",
       "      <td>275.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>LP001174</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3772</td>\n",
       "      <td>833</td>\n",
       "      <td>57.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>LP001176</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2942</td>\n",
       "      <td>2382</td>\n",
       "      <td>125.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>337</th>\n",
       "      <td>LP002856</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2292</td>\n",
       "      <td>1558</td>\n",
       "      <td>119.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>338</th>\n",
       "      <td>LP002857</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2360</td>\n",
       "      <td>3355</td>\n",
       "      <td>87.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>339</th>\n",
       "      <td>LP002858</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4333</td>\n",
       "      <td>2333</td>\n",
       "      <td>162.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Rural</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>340</th>\n",
       "      <td>LP002860</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2623</td>\n",
       "      <td>4831</td>\n",
       "      <td>122.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>341</th>\n",
       "      <td>LP002867</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3972</td>\n",
       "      <td>4275</td>\n",
       "      <td>187.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>342</th>\n",
       "      <td>LP002869</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3522</td>\n",
       "      <td>0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>343</th>\n",
       "      <td>LP002870</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4700</td>\n",
       "      <td>0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>344</th>\n",
       "      <td>LP002876</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>6858</td>\n",
       "      <td>0</td>\n",
       "      <td>176.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345</th>\n",
       "      <td>LP002878</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>8334</td>\n",
       "      <td>0</td>\n",
       "      <td>260.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>346</th>\n",
       "      <td>LP002879</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3391</td>\n",
       "      <td>1966</td>\n",
       "      <td>133.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Rural</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>347</th>\n",
       "      <td>LP002885</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2868</td>\n",
       "      <td>0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>348</th>\n",
       "      <td>LP002890</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3418</td>\n",
       "      <td>1380</td>\n",
       "      <td>135.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>349</th>\n",
       "      <td>LP002891</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2500</td>\n",
       "      <td>296</td>\n",
       "      <td>137.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>350</th>\n",
       "      <td>LP002899</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>8667</td>\n",
       "      <td>0</td>\n",
       "      <td>254.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>351</th>\n",
       "      <td>LP002901</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2283</td>\n",
       "      <td>15000</td>\n",
       "      <td>106.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>352</th>\n",
       "      <td>LP002907</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5817</td>\n",
       "      <td>910</td>\n",
       "      <td>109.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>353</th>\n",
       "      <td>LP002920</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5119</td>\n",
       "      <td>3769</td>\n",
       "      <td>120.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>354</th>\n",
       "      <td>LP002921</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5316</td>\n",
       "      <td>187</td>\n",
       "      <td>158.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Semiurban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>355</th>\n",
       "      <td>LP002932</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>7603</td>\n",
       "      <td>1213</td>\n",
       "      <td>197.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>356</th>\n",
       "      <td>LP002935</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3791</td>\n",
       "      <td>1936</td>\n",
       "      <td>85.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>357</th>\n",
       "      <td>LP002952</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2500</td>\n",
       "      <td>0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>358</th>\n",
       "      <td>LP002954</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3132</td>\n",
       "      <td>0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>359</th>\n",
       "      <td>LP002962</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4000</td>\n",
       "      <td>2667</td>\n",
       "      <td>152.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>360</th>\n",
       "      <td>LP002965</td>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>8550</td>\n",
       "      <td>4255</td>\n",
       "      <td>96.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>361</th>\n",
       "      <td>LP002969</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2269</td>\n",
       "      <td>2167</td>\n",
       "      <td>99.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>362</th>\n",
       "      <td>LP002971</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>4009</td>\n",
       "      <td>1777</td>\n",
       "      <td>113.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>363</th>\n",
       "      <td>LP002975</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4158</td>\n",
       "      <td>709</td>\n",
       "      <td>115.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>364</th>\n",
       "      <td>LP002980</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3250</td>\n",
       "      <td>1993</td>\n",
       "      <td>126.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>365</th>\n",
       "      <td>LP002986</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5000</td>\n",
       "      <td>2393</td>\n",
       "      <td>158.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>366</th>\n",
       "      <td>LP002989</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>9200</td>\n",
       "      <td>0</td>\n",
       "      <td>98.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>367 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Loan_ID  Gender Married Dependents     Education Self_Employed  \\\n",
       "0    LP001015    Male     Yes          0      Graduate            No   \n",
       "1    LP001022    Male     Yes          1      Graduate            No   \n",
       "2    LP001031    Male     Yes          2      Graduate            No   \n",
       "3    LP001035    Male     Yes          2      Graduate            No   \n",
       "4    LP001051    Male      No          0  Not Graduate            No   \n",
       "5    LP001054    Male     Yes          0  Not Graduate           Yes   \n",
       "6    LP001055  Female      No          1  Not Graduate            No   \n",
       "7    LP001056    Male     Yes          2  Not Graduate            No   \n",
       "8    LP001059    Male     Yes          2      Graduate           NaN   \n",
       "9    LP001067    Male      No          0  Not Graduate            No   \n",
       "10   LP001078    Male      No          0  Not Graduate            No   \n",
       "11   LP001082    Male     Yes          1      Graduate           NaN   \n",
       "12   LP001083    Male      No          3      Graduate            No   \n",
       "13   LP001094    Male     Yes          2      Graduate           NaN   \n",
       "14   LP001096  Female      No          0      Graduate            No   \n",
       "15   LP001099    Male      No          1      Graduate            No   \n",
       "16   LP001105    Male     Yes          2      Graduate            No   \n",
       "17   LP001107    Male     Yes          3      Graduate            No   \n",
       "18   LP001108    Male     Yes          0      Graduate            No   \n",
       "19   LP001115    Male      No          0      Graduate            No   \n",
       "20   LP001121    Male     Yes          1  Not Graduate            No   \n",
       "21   LP001124  Female      No          3  Not Graduate            No   \n",
       "22   LP001128     NaN      No          0      Graduate            No   \n",
       "23   LP001135  Female      No          0  Not Graduate            No   \n",
       "24   LP001149    Male     Yes          0      Graduate            No   \n",
       "25   LP001153    Male      No          0      Graduate            No   \n",
       "26   LP001163    Male     Yes          2      Graduate            No   \n",
       "27   LP001169    Male     Yes          0      Graduate            No   \n",
       "28   LP001174    Male     Yes          0      Graduate            No   \n",
       "29   LP001176    Male      No          0      Graduate            No   \n",
       "..        ...     ...     ...        ...           ...           ...   \n",
       "337  LP002856    Male     Yes          0      Graduate            No   \n",
       "338  LP002857    Male     Yes          1      Graduate           Yes   \n",
       "339  LP002858  Female      No          0      Graduate            No   \n",
       "340  LP002860    Male     Yes          0      Graduate           Yes   \n",
       "341  LP002867    Male      No          0      Graduate           Yes   \n",
       "342  LP002869    Male     Yes          3  Not Graduate            No   \n",
       "343  LP002870    Male     Yes          1      Graduate            No   \n",
       "344  LP002876    Male      No          0      Graduate            No   \n",
       "345  LP002878    Male     Yes          3      Graduate            No   \n",
       "346  LP002879    Male     Yes          0      Graduate            No   \n",
       "347  LP002885    Male      No          0  Not Graduate            No   \n",
       "348  LP002890    Male     Yes          2  Not Graduate            No   \n",
       "349  LP002891    Male     Yes          0      Graduate           Yes   \n",
       "350  LP002899    Male     Yes          2      Graduate            No   \n",
       "351  LP002901    Male      No          0      Graduate            No   \n",
       "352  LP002907    Male     Yes          0      Graduate            No   \n",
       "353  LP002920    Male     Yes          0      Graduate            No   \n",
       "354  LP002921    Male     Yes          3  Not Graduate            No   \n",
       "355  LP002932    Male     Yes          3      Graduate            No   \n",
       "356  LP002935    Male     Yes          1      Graduate            No   \n",
       "357  LP002952    Male      No          0      Graduate            No   \n",
       "358  LP002954    Male     Yes          2  Not Graduate            No   \n",
       "359  LP002962    Male      No          0      Graduate            No   \n",
       "360  LP002965  Female     Yes          0      Graduate            No   \n",
       "361  LP002969    Male     Yes          1      Graduate            No   \n",
       "362  LP002971    Male     Yes          3  Not Graduate           Yes   \n",
       "363  LP002975    Male     Yes          0      Graduate            No   \n",
       "364  LP002980    Male      No          0      Graduate            No   \n",
       "365  LP002986    Male     Yes          0      Graduate            No   \n",
       "366  LP002989    Male      No          0      Graduate           Yes   \n",
       "\n",
       "     ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "0               5720                  0       110.0             360.0   \n",
       "1               3076               1500       126.0             360.0   \n",
       "2               5000               1800       208.0             360.0   \n",
       "3               2340               2546       100.0             360.0   \n",
       "4               3276                  0        78.0             360.0   \n",
       "5               2165               3422       152.0             360.0   \n",
       "6               2226                  0        59.0             360.0   \n",
       "7               3881                  0       147.0             360.0   \n",
       "8              13633                  0       280.0             240.0   \n",
       "9               2400               2400       123.0             360.0   \n",
       "10              3091                  0        90.0             360.0   \n",
       "11              2185               1516       162.0             360.0   \n",
       "12              4166                  0        40.0             180.0   \n",
       "13             12173                  0       166.0             360.0   \n",
       "14              4666                  0       124.0             360.0   \n",
       "15              5667                  0       131.0             360.0   \n",
       "16              4583               2916       200.0             360.0   \n",
       "17              3786                333       126.0             360.0   \n",
       "18              9226               7916       300.0             360.0   \n",
       "19              1300               3470       100.0             180.0   \n",
       "20              1888               1620        48.0             360.0   \n",
       "21              2083                  0        28.0             180.0   \n",
       "22              3909                  0       101.0             360.0   \n",
       "23              3765                  0       125.0             360.0   \n",
       "24              5400               4380       290.0             360.0   \n",
       "25                 0              24000       148.0             360.0   \n",
       "26              4363               1250       140.0             360.0   \n",
       "27              7500               3750       275.0             360.0   \n",
       "28              3772                833        57.0             360.0   \n",
       "29              2942               2382       125.0             180.0   \n",
       "..               ...                ...         ...               ...   \n",
       "337             2292               1558       119.0             360.0   \n",
       "338             2360               3355        87.0             240.0   \n",
       "339             4333               2333       162.0             360.0   \n",
       "340             2623               4831       122.0             180.0   \n",
       "341             3972               4275       187.0             360.0   \n",
       "342             3522                  0        81.0             180.0   \n",
       "343             4700                  0        80.0             360.0   \n",
       "344             6858                  0       176.0             360.0   \n",
       "345             8334                  0       260.0             360.0   \n",
       "346             3391               1966       133.0             360.0   \n",
       "347             2868                  0        70.0             360.0   \n",
       "348             3418               1380       135.0             360.0   \n",
       "349             2500                296       137.0             300.0   \n",
       "350             8667                  0       254.0             360.0   \n",
       "351             2283              15000       106.0             360.0   \n",
       "352             5817                910       109.0             360.0   \n",
       "353             5119               3769       120.0             360.0   \n",
       "354             5316                187       158.0             180.0   \n",
       "355             7603               1213       197.0             360.0   \n",
       "356             3791               1936        85.0             360.0   \n",
       "357             2500                  0        60.0             360.0   \n",
       "358             3132                  0        76.0             360.0   \n",
       "359             4000               2667       152.0             360.0   \n",
       "360             8550               4255        96.0             360.0   \n",
       "361             2269               2167        99.0             360.0   \n",
       "362             4009               1777       113.0             360.0   \n",
       "363             4158                709       115.0             360.0   \n",
       "364             3250               1993       126.0             360.0   \n",
       "365             5000               2393       158.0             360.0   \n",
       "366             9200                  0        98.0             180.0   \n",
       "\n",
       "     Credit_History Property_Area  \n",
       "0               1.0         Urban  \n",
       "1               1.0         Urban  \n",
       "2               1.0         Urban  \n",
       "3               NaN         Urban  \n",
       "4               1.0         Urban  \n",
       "5               1.0         Urban  \n",
       "6               1.0     Semiurban  \n",
       "7               0.0         Rural  \n",
       "8               1.0         Urban  \n",
       "9               1.0     Semiurban  \n",
       "10              1.0         Urban  \n",
       "11              1.0     Semiurban  \n",
       "12              NaN         Urban  \n",
       "13              0.0     Semiurban  \n",
       "14              1.0     Semiurban  \n",
       "15              1.0         Urban  \n",
       "16              1.0         Urban  \n",
       "17              1.0     Semiurban  \n",
       "18              1.0         Urban  \n",
       "19              1.0     Semiurban  \n",
       "20              1.0         Urban  \n",
       "21              1.0         Urban  \n",
       "22              1.0         Urban  \n",
       "23              1.0         Urban  \n",
       "24              1.0         Urban  \n",
       "25              0.0         Rural  \n",
       "26              NaN         Urban  \n",
       "27              1.0         Urban  \n",
       "28              NaN     Semiurban  \n",
       "29              1.0         Urban  \n",
       "..              ...           ...  \n",
       "337             1.0         Urban  \n",
       "338             1.0         Rural  \n",
       "339             0.0         Rural  \n",
       "340             1.0     Semiurban  \n",
       "341             1.0         Rural  \n",
       "342             1.0         Rural  \n",
       "343             1.0         Urban  \n",
       "344             1.0         Rural  \n",
       "345             1.0         Urban  \n",
       "346             0.0         Rural  \n",
       "347             1.0         Urban  \n",
       "348             1.0         Urban  \n",
       "349             1.0         Rural  \n",
       "350             1.0         Rural  \n",
       "351             NaN         Rural  \n",
       "352             1.0         Urban  \n",
       "353             1.0         Rural  \n",
       "354             0.0     Semiurban  \n",
       "355             1.0         Urban  \n",
       "356             1.0         Urban  \n",
       "357             1.0         Urban  \n",
       "358             NaN         Rural  \n",
       "359             1.0     Semiurban  \n",
       "360             NaN         Urban  \n",
       "361             1.0     Semiurban  \n",
       "362             1.0         Urban  \n",
       "363             1.0         Urban  \n",
       "364             NaN     Semiurban  \n",
       "365             1.0         Rural  \n",
       "366             1.0         Rural  \n",
       "\n",
       "[367 rows x 12 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x104e4940>"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "matrix = train2.corr()\n",
    "sns.heatmap(matrix,vmax=1.5,square=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "train2[\"Gender\"].fillna(train[\"Gender\"].mode()[0],inplace=True)\n",
    "train2[\"Married\"].fillna(train2[\"Married\"].mode()[0],inplace=True)\n",
    "train2[\"Dependents\"].fillna(train2[\"Dependents\"].mode()[0],inplace=True)\n",
    "train2[\"Credit_History\"].fillna(train2[\"Credit_History\"].mode()[0],inplace=True)\n",
    "train2[\"Self_Employed\"].fillna(train2[\"Self_Employed\"].mode()[0],inplace=True)\n",
    "train2[\"Loan_Amount_Term\"].fillna(train2[\"Loan_Amount_Term\"].mode()[0],inplace=True)\n",
    "train2[\"LoanAmount\"].fillna(train2[\"LoanAmount\"].median(),inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1067ee48>"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "train2.isnull().sum()\n",
    "\n",
    "\n",
    "\n",
    "train2[\"LoanAmountLog\"]=np.log(train2[\"LoanAmount\"])\n",
    "test['LoanAmountlog'] = np.log(test['LoanAmount'])\n",
    "train2[\"LoanAmountLog\"].hist(bins=20)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "train2=train2.drop('Loan_ID',axis=1) \n",
    "test=test.drop('Loan_ID',axis=1)\n",
    "\n",
    "\n",
    "x = train2.drop(\"Loan_Status\",1)\n",
    "train2.isnull().sum()\n",
    "train2.fillna(train2[\"LoanAmountLog\"].mean(),inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "y=train2[\"Loan_Status\"]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "#train2[\"LoanAmount\"].fillna(train2[\"LoanAmount\"].median(),inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "x=pd.get_dummies(x)\n",
    "train2=pd.get_dummies(train2)\n",
    "test=pd.get_dummies(test)\n",
    "\n",
    "\n",
    "xtrain, xcv, ytrain, ycv = train_test_split(x,y, test_size=.3)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 185 entries, 34 to 180\n",
      "Data columns (total 21 columns):\n",
      "ApplicantIncome            185 non-null int64\n",
      "CoapplicantIncome          185 non-null float64\n",
      "LoanAmount                 185 non-null float64\n",
      "Loan_Amount_Term           185 non-null float64\n",
      "Credit_History             185 non-null float64\n",
      "LoanAmountLog              185 non-null float64\n",
      "Gender_Female              185 non-null uint8\n",
      "Gender_Male                185 non-null uint8\n",
      "Married_No                 185 non-null uint8\n",
      "Married_Yes                185 non-null uint8\n",
      "Dependents_3               185 non-null uint8\n",
      "Dependents_0               185 non-null uint8\n",
      "Dependents_1               185 non-null uint8\n",
      "Dependents_2               185 non-null uint8\n",
      "Education_Graduate         185 non-null uint8\n",
      "Education_Not Graduate     185 non-null uint8\n",
      "Self_Employed_No           185 non-null uint8\n",
      "Self_Employed_Yes          185 non-null uint8\n",
      "Property_Area_Rural        185 non-null uint8\n",
      "Property_Area_Semiurban    185 non-null uint8\n",
      "Property_Area_Urban        185 non-null uint8\n",
      "dtypes: float64(5), int64(1), uint8(15)\n",
      "memory usage: 12.8 KB\n"
     ]
    }
   ],
   "source": [
    "xcv.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Elliot\\Anaconda2\\lib\\site-packages\\pandas\\core\\generic.py:6130: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  self._update_inplace(new_data)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xtrain[\"LoanAmountLog\"].fillna(xtrain[\"LoanAmountLog\"].mean(),inplace=True)\n",
    "xcv[\"LoanAmountLog\"].fillna(xcv[\"LoanAmountLog\"].mean(),inplace=True)\n",
    "ycv.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "testoriginal=pd.read_csv(\"test_loan.csv\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 367 entries, 0 to 366\n",
      "Data columns (total 12 columns):\n",
      "Loan_ID              367 non-null object\n",
      "Gender               356 non-null object\n",
      "Married              367 non-null object\n",
      "Dependents           357 non-null object\n",
      "Education            367 non-null object\n",
      "Self_Employed        344 non-null object\n",
      "ApplicantIncome      367 non-null int64\n",
      "CoapplicantIncome    367 non-null int64\n",
      "LoanAmount           362 non-null float64\n",
      "Loan_Amount_Term     361 non-null float64\n",
      "Credit_History       338 non-null float64\n",
      "Property_Area        367 non-null object\n",
      "dtypes: float64(3), int64(2), object(7)\n",
      "memory usage: 34.5+ KB\n"
     ]
    }
   ],
   "source": [
    "testoriginal.info()\n",
    "model = LogisticRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Elliot\\Anaconda2\\lib\\site-packages\\sklearn\\linear_model\\logistic.py:433: FutureWarning: Default solver will be changed to 'lbfgs' in 0.22. Specify a solver to silence this warning.\n",
      "  FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n",
       "          intercept_scaling=1, max_iter=100, multi_class='warn',\n",
       "          n_jobs=None, penalty='l2', random_state=None, solver='warn',\n",
       "          tol=0.0001, verbose=0, warm_start=False)"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(xtrain,ytrain)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "185"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predcv=model.predict(xcv)\n",
    "accuracy_score(ycv,predcv)\n",
    "\n",
    "len(ycv)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Loan_Status</th>\n",
       "      <th>LoanAmountLog</th>\n",
       "      <th>Gender_Female</th>\n",
       "      <th>Gender_Male</th>\n",
       "      <th>Married_No</th>\n",
       "      <th>...</th>\n",
       "      <th>Dependents_0</th>\n",
       "      <th>Dependents_1</th>\n",
       "      <th>Dependents_2</th>\n",
       "      <th>Education_Graduate</th>\n",
       "      <th>Education_Not Graduate</th>\n",
       "      <th>Self_Employed_No</th>\n",
       "      <th>Self_Employed_Yes</th>\n",
       "      <th>Property_Area_Rural</th>\n",
       "      <th>Property_Area_Semiurban</th>\n",
       "      <th>Property_Area_Urban</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "      <td>614.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>5403.459283</td>\n",
       "      <td>1621.245798</td>\n",
       "      <td>145.752443</td>\n",
       "      <td>342.410423</td>\n",
       "      <td>0.855049</td>\n",
       "      <td>0.687296</td>\n",
       "      <td>4.857250</td>\n",
       "      <td>0.182410</td>\n",
       "      <td>0.817590</td>\n",
       "      <td>0.346906</td>\n",
       "      <td>...</td>\n",
       "      <td>0.586319</td>\n",
       "      <td>0.166124</td>\n",
       "      <td>0.164495</td>\n",
       "      <td>0.781759</td>\n",
       "      <td>0.218241</td>\n",
       "      <td>0.866450</td>\n",
       "      <td>0.133550</td>\n",
       "      <td>0.291531</td>\n",
       "      <td>0.379479</td>\n",
       "      <td>0.328990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>6109.041673</td>\n",
       "      <td>2926.248369</td>\n",
       "      <td>84.107233</td>\n",
       "      <td>64.428629</td>\n",
       "      <td>0.352339</td>\n",
       "      <td>0.463973</td>\n",
       "      <td>0.495996</td>\n",
       "      <td>0.386497</td>\n",
       "      <td>0.386497</td>\n",
       "      <td>0.476373</td>\n",
       "      <td>...</td>\n",
       "      <td>0.492894</td>\n",
       "      <td>0.372495</td>\n",
       "      <td>0.371027</td>\n",
       "      <td>0.413389</td>\n",
       "      <td>0.413389</td>\n",
       "      <td>0.340446</td>\n",
       "      <td>0.340446</td>\n",
       "      <td>0.454838</td>\n",
       "      <td>0.485653</td>\n",
       "      <td>0.470229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>150.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.197225</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2877.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>100.250000</td>\n",
       "      <td>360.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.607658</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>3812.500000</td>\n",
       "      <td>1188.500000</td>\n",
       "      <td>128.000000</td>\n",
       "      <td>360.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.852030</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>5795.000000</td>\n",
       "      <td>2297.250000</td>\n",
       "      <td>164.750000</td>\n",
       "      <td>360.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.104426</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>81000.000000</td>\n",
       "      <td>41667.000000</td>\n",
       "      <td>700.000000</td>\n",
       "      <td>480.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>6.551080</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "count       614.000000         614.000000  614.000000        614.000000   \n",
       "mean       5403.459283        1621.245798  145.752443        342.410423   \n",
       "std        6109.041673        2926.248369   84.107233         64.428629   \n",
       "min         150.000000           0.000000    9.000000         12.000000   \n",
       "25%        2877.500000           0.000000  100.250000        360.000000   \n",
       "50%        3812.500000        1188.500000  128.000000        360.000000   \n",
       "75%        5795.000000        2297.250000  164.750000        360.000000   \n",
       "max       81000.000000       41667.000000  700.000000        480.000000   \n",
       "\n",
       "       Credit_History  Loan_Status  LoanAmountLog  Gender_Female  Gender_Male  \\\n",
       "count      614.000000   614.000000     614.000000     614.000000   614.000000   \n",
       "mean         0.855049     0.687296       4.857250       0.182410     0.817590   \n",
       "std          0.352339     0.463973       0.495996       0.386497     0.386497   \n",
       "min          0.000000     0.000000       2.197225       0.000000     0.000000   \n",
       "25%          1.000000     0.000000       4.607658       0.000000     1.000000   \n",
       "50%          1.000000     1.000000       4.852030       0.000000     1.000000   \n",
       "75%          1.000000     1.000000       5.104426       0.000000     1.000000   \n",
       "max          1.000000     1.000000       6.551080       1.000000     1.000000   \n",
       "\n",
       "       Married_No  ...  Dependents_0  Dependents_1  Dependents_2  \\\n",
       "count  614.000000  ...    614.000000    614.000000    614.000000   \n",
       "mean     0.346906  ...      0.586319      0.166124      0.164495   \n",
       "std      0.476373  ...      0.492894      0.372495      0.371027   \n",
       "min      0.000000  ...      0.000000      0.000000      0.000000   \n",
       "25%      0.000000  ...      0.000000      0.000000      0.000000   \n",
       "50%      0.000000  ...      1.000000      0.000000      0.000000   \n",
       "75%      1.000000  ...      1.000000      0.000000      0.000000   \n",
       "max      1.000000  ...      1.000000      1.000000      1.000000   \n",
       "\n",
       "       Education_Graduate  Education_Not Graduate  Self_Employed_No  \\\n",
       "count          614.000000              614.000000        614.000000   \n",
       "mean             0.781759                0.218241          0.866450   \n",
       "std              0.413389                0.413389          0.340446   \n",
       "min              0.000000                0.000000          0.000000   \n",
       "25%              1.000000                0.000000          1.000000   \n",
       "50%              1.000000                0.000000          1.000000   \n",
       "75%              1.000000                0.000000          1.000000   \n",
       "max              1.000000                1.000000          1.000000   \n",
       "\n",
       "       Self_Employed_Yes  Property_Area_Rural  Property_Area_Semiurban  \\\n",
       "count         614.000000           614.000000               614.000000   \n",
       "mean            0.133550             0.291531                 0.379479   \n",
       "std             0.340446             0.454838                 0.485653   \n",
       "min             0.000000             0.000000                 0.000000   \n",
       "25%             0.000000             0.000000                 0.000000   \n",
       "50%             0.000000             0.000000                 0.000000   \n",
       "75%             0.000000             1.000000                 1.000000   \n",
       "max             1.000000             1.000000                 1.000000   \n",
       "\n",
       "       Property_Area_Urban  \n",
       "count           614.000000  \n",
       "mean              0.328990  \n",
       "std               0.470229  \n",
       "min               0.000000  \n",
       "25%               0.000000  \n",
       "50%               0.000000  \n",
       "75%               1.000000  \n",
       "max               1.000000  \n",
       "\n",
       "[8 rows x 22 columns]"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "\n",
    "\n",
    "test[\"LoanAmountlog\"].fillna(test[\"LoanAmountlog\"].mean(),inplace=True)\n",
    "test[\"Credit_History\"].fillna(test[\"Credit_History\"].mode()[0],inplace=True)\n",
    "\n",
    "test[\"Loan_Amount_Term\"].fillna(test[\"Loan_Amount_Term\"].mode()[0],inplace=True)\n",
    "test[\"LoanAmount\"].fillna(test[\"LoanAmount\"].median(),inplace=True)\n",
    "train2.describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "367"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predtest=model.predict(test)\n",
    "predtest\n",
    "len(test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "submission=pd.read_csv(\"sample_submission.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "submission[\"Loan_Status\"]=predtest\n",
    "submission['Loan_ID']=testoriginal['Loan_ID']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "submission2=submission"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "submission2=pd.get_dummies(submission2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "1 of kfold 5\n",
      "('accuracy score', 0.7983870967741935)\n",
      "\n",
      "2 of kfold 5\n",
      "('accuracy score', 0.8306451612903226)\n",
      "\n",
      "3 of kfold 5\n",
      "('accuracy score', 0.8114754098360656)\n",
      "\n",
      "4 of kfold 5\n",
      "('accuracy score', 0.7950819672131147)\n",
      "\n",
      "5 of kfold 5\n",
      "('accuracy score', 0.8278688524590164)\n"
     ]
    }
   ],
   "source": [
    "i=1\n",
    "kf=StratifiedKFold(n_splits=5,random_state=1,shuffle=True)\n",
    "for train_index,test2_index in kf.split(x,y):\n",
    "    print (\"\\n{} of kfold {}\".format(i,kf.n_splits))\n",
    "    xtr,xvl=x.loc[train_index],x.loc[test2_index]\n",
    "    ytr,yvl = y.loc[train_index],y.loc[test2_index]\n",
    "    model=LogisticRegression(random_state=1)\n",
    "    model.fit(xtr,ytr)\n",
    "    pred_test=model.predict(xvl)\n",
    "    score=accuracy_score(yvl,pred_test)\n",
    "    print (\"accuracy score\", score)\n",
    "    i+=1\n",
    "    #pred_test = model.predict(test)\n",
    "    #pred=model.predict_proba(xvl)[:,1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "pred=model.predict_proba(xvl)[:,1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.76384172, 0.68853556, 0.40735361, 0.80941589, 0.37126226,\n",
       "       0.18931641, 0.88346098, 0.61178536, 0.79220566, 0.89679959,\n",
       "       0.77648459, 0.16139958, 0.67815017, 0.1739553 , 0.87776213,\n",
       "       0.84074431, 0.6371912 , 0.7749024 , 0.84504929, 0.74401669,\n",
       "       0.76816383, 0.25785833, 0.78016973, 0.68962091, 0.75100572,\n",
       "       0.92114785, 0.68242121, 0.66438169, 0.69903589, 0.46409098,\n",
       "       0.85229344, 0.66092004, 0.28574323, 0.65325094, 0.93541282,\n",
       "       0.85712006, 0.81420422, 0.85527562, 0.68141523, 0.79036463,\n",
       "       0.86868205, 0.85953312, 0.64780312, 0.75521909, 0.81252487,\n",
       "       0.75445409, 0.56366617, 0.62316688, 0.84437062, 0.53609683,\n",
       "       0.82928036, 0.33405148, 0.87871923, 0.64197711, 0.6629688 ,\n",
       "       0.75629003, 0.86093468, 0.57406015, 0.65969844, 0.65828521,\n",
       "       0.91696313, 0.12541737, 0.70829268, 0.8679625 , 0.82492165,\n",
       "       0.89384827, 0.87777176, 0.89858476, 0.63526163, 0.68140944,\n",
       "       0.85068783, 0.91410844, 0.68273812, 0.65135466, 0.68431426,\n",
       "       0.77630561, 0.38583023, 0.80471404, 0.85985602, 0.66145151,\n",
       "       0.58066245, 0.16808592, 0.34149028, 0.76774053, 0.20082756,\n",
       "       0.47989183, 0.89585846, 0.64408248, 0.78067967, 0.6502157 ,\n",
       "       0.19103886, 0.2483609 , 0.91938448, 0.7523559 , 0.86766656,\n",
       "       0.78638481, 0.71278669, 0.40847344, 0.76539261, 0.55373907,\n",
       "       0.89002314, 0.70019178, 0.71040259, 0.64233165, 0.55610955,\n",
       "       0.87664857, 0.88812572, 0.87630325, 0.84459676, 0.89151745,\n",
       "       0.86980712, 0.7532547 , 0.6699124 , 0.68063622, 0.82414099,\n",
       "       0.86929276, 0.67151775, 0.65748765, 0.79846625, 0.72657265,\n",
       "       0.41211931, 0.79078211])"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAtQAAAHjCAYAAAADuoh4AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4zLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvIxREBQAAIABJREFUeJzt3XucVnW99//XB1DJw5gK1ggmWJgOhqCTaZlKZIoZeMCETQc187Azb7Purd1Y27rzscvc1TYPZd2e2qAgipA/yg5gWjsRVESdskhRB9mKiOIJEfj8/piL2cMwM1zOmmsO8Ho+HvPwWt/1XWt9rmsJvOd7fddakZlIkiRJap9eXV2AJEmS1JMZqCVJkqQCDNSSJElSAQZqSZIkqQADtSRJklSAgVqSJEkqwEAtSZIkFWCgliRJkgowUEuSJEkF9OnqAt6ufv365aBBg7q6DEmSJG3hHnjggRcys//m+vW4QD1o0CAWLFjQ1WVIkiRpCxcRT5XTzykfkiRJUgEGakmSJKkAA7UkSZJUQI+bQ92St956i/r6elavXt3VpUhbpb59+zJw4EC22Wabri5FkqROt0UE6vr6enbaaScGDRpERHR1OdJWJTNZsWIF9fX1DB48uKvLkSSp020RUz5Wr17NbrvtZpiWukBEsNtuu/kNkSRpq7VFBGrAMC11If/8SZK2ZltMoJYkSZK6goG6C+y4444APPvss4wbN67FPkceeeRmH2Dzox/9iNdff71x+dhjj+Wll17quEI7wY033siQIUMYMmQIN954Y4t9TjnlFIYPH87w4cMZNGgQw4cPB2Dy5MmN7cOHD6dXr14sXLiQ119/nU9+8pPsu+++DB06lIsuuqhxXzfccAP9+/dv3ObnP/9547revXs3to8ZM6axPTOZNGkS++yzD/vttx9XXHEFADNnzmTYsGEMHz6c2tpa/vjHPzZuc+GFF7L//vuz//77M3Xq1Mb2J598kg996EMMGTKEU045hTVr1gDw1FNPMWrUKIYNG8aRRx5JfX09AHPnzt3oPfbt25c77rgDgI9+9KON7XvssQfHH3/8Rp/b/Pnz6d27N9OnT9+ofdWqVQwYMIBzzz23se2YY47hgAMOYOjQoZx99tmsW7eucd2Pf/xj3v/+9zN06FD+5V/+pdVzKUnSVisze9TPQQcdlM3V1dVt0tad7bDDDpvtc8QRR+T8+fPb7LPXXnvl8uXLO6qsTrdixYocPHhwrlixIl988cUcPHhwvvjii21uc8EFF+S3vvWtTdoXLVqUgwcPzszM1157LefMmZOZmW+++WYedthhOXv27MzMvP766/NLX/pSi/tu7bxcd911+dnPfjbXrVuXmZnPPfdcZma+8soruX79+szMfPjhh/P9739/Zmbeeeed+fGPfzzfeuutfPXVV/Oggw7Kl19+OTMzTz755Lz55pszM/Oss87Kq6++OjMzx40blzfccENmZv7+97/Pz3zmMy1+Xrvssku+9tprm6w78cQT88Ybb2xcXrt2bY4cOTJHjx6dt95660Z9zzvvvJwwYcJGn8OG+tavX58nnnhiY41z5szJUaNG5erVqzd67y3paX8OJUnaHGBBlpFPt4i7fDT1rV8+Rt2zqzp0nzV7VPGvnxra6voLL7yQvfbai3/+538G4JJLLiEiuOeee1i5ciVvvfUW3/nOdxg7duxG2y1ZsoTjjjuORx99lDfeeIPTTjuNuro69ttvP954443Gfueccw7z58/njTfeYNy4cXzrW9/iiiuu4Nlnn2XkyJH069ePuXPnNj6WvV+/fvzgBz/guuuuA+CMM87g/PPPZ8mSJYwePZrDDjuM//qv/2LAgAHMnDmTd7zjHRvV9ctf/pLvfOc7rFmzht12243Jkyfzrne9i0suuYQdd9yRr33tawDsv//+3HnnnQwaNIibbrqJyy+/nIhg2LBh/OIXv9js53rXXXdx1FFHseuuuwJw1FFH8etf/5oJEya02D8zmTZtGnPmzNlk3c0339y43fbbb8/IkSMB2HbbbTnwwAMbR3zb45prrmHKlCn06tXwhc7uu+8O/M83DQCvvfZa4zziuro6jjjiCPr06UOfPn044IAD+PWvf83JJ5/MnDlzmDJlCgCf//znueSSSzjnnHOoq6vjhz/8IQAjR47cZLQZYPr06YwePZrtt99+o/ZXXnmFOXPmcP311ze2/fjHP+akk05i/vz5G/V94IEHeO655zjmmGM2+gakqqoKgLVr17JmzZrG93LNNddw0UUXsd1222303iVJ0v9wykcHGD9+/EZf60+bNo3TTjuNGTNm8OCDDzJ37ly++tWv0vCLTsuuueYatt9+exYtWsSkSZN44IEHGtddeumlLFiwgEWLFvGHP/yBRYsWcd5557HHHnswd+5c5s6du9G+HnjgAa6//nrmzZvHfffdx89+9jMeeughAP7+97/zpS99iccee4x3vvOd3HbbbZvUcthhh3Hffffx0EMPMX78eC677LI23/9jjz3GpZdeypw5c3j44Yf5j//4D2DTKRkbfjZMc1m6dCl77rln434GDhzI0qVLWz3Ovffey7ve9S6GDBmyybqpU6e2GMRfeuklfvnLXzJq1KjGtttuu41hw4Yxbtw4nnnmmcb21atXU1tbyyGHHNI4rQLgH//4B1OnTqW2tpbRo0fz97//vXHdjBkz2HffffnkJz/Z+AvMAQccwK9+9Stef/11XnjhBebOncszzzzDihUreOc730mfPn02eb8HHHBA47mYMWMGr7zyCitWrNjovdxyyy0tvscZM2YwatSoxlC8dOlSZsyYwdlnn71Rv/Xr1/PVr36V73//+y19vBx99NHsvvvu7LTTTo3n6G9/+xv33nsvH/rQhzjiiCM2CeiSJGkLuQ91U22NJFfKiBEjeP7553n22WdZvnw5u+yyC9XV1XzlK1/hnnvuoVevXixdupTnnnuOd7/73S3u45577uG8884DYNiwYQwbNqxx3bRp07j22mtZu3Yty5Yto66ubqP1zf3xj3/khBNOYIcddgDgxBNP5N5772XMmDEMHjy4cQ7yQQcdxJIlSzbZvr6+nlNOOYVly5axZs2azd5beM6cOYwbN45+/foBNI44T5w4kYkTJ7a6XUu/YLR1t4imo9BNzZs3j+233579999/o/a1a9cyYcIEzjvvPPbee28APvWpTzFhwgS22247fvKTn/D5z3++ccT76aefZo899uCJJ57gYx/7GB/4wAd473vfy5tvvknfvn1ZsGABt99+O6effjr33nsvACeccAInnHAC99xzD9/4xjf43e9+xyc+8Qnmz5/Phz/8Yfr378+hhx5Knz592ny/l19+Oeeeey433HADhx9+OAMGDGgM3gDLli3jkUce4eijj27xcznjjDMal88//3y+973v0bt37436XX311Rx77LEb/RLT1F133cXq1auZOHEic+bM4aijjmLt2rWsXLmS++67j/nz5/PpT3+aJ554wrt6SJLUxBYXqLvKuHHjmD59Ov/93//N+PHjmTx5MsuXL+eBBx5gm222YdCgQZu9T29LIeXJJ5/k8ssvZ/78+eyyyy6ceuqpm91PWyPhG766h4aL8JpOLdngy1/+MhdccAFjxozh7rvv5pJLLgGgT58+rF+/vrHfhjoys8XaJ0+e3OJo6Pve9z6mT5/OwIEDufvuuxvb6+vrOfLII1use+3atdx+++0bjdxv0NrI7ZlnnsmQIUM4//zzG9t22223xtdf/OIXufDCCxuX99hjDwD23ntvjjzySB566CHe+973MnDgQE466SSgIUCfdtppmxzr8MMP5x//+AcvvPAC/fr1Y9KkSUyaNAmAf/qnf2LIkCH069ePl156ibVr19KnTx/q6+sbj7nHHntw++23A/Dqq69y2223sfPOOzfuf9q0aZxwwgmbPIlwxYoV3H///cyYMaOxbcGCBYwfPx6AF154gdmzZ9OnTx/+/Oc/c++993L11Vfz6quvsmbNGnbccUe++93vNm7bt29fxowZw8yZMznqqKMYOHAgJ554IhHBwQcfTK9evXjhhRfo37//Jp+BJElbq4pN+YiI6yLi+Yh4tJX1ERFXRMTiiFgUEQdWqpbOMH78eG655RamT5/OuHHjePnll9l9993ZZpttmDt3Lk899VSb2x9++OFMnjwZgEcffZRFixYBDXdk2GGHHdh555157rnn+NWvftW4zU477cQrr7zS4r7uuOMOXn/9dV577TVmzJjBRz/60TaPf+WVV3LllVcC8PLLLzNgwACAje68MWjQIB588EEAHnzwQZ588kkARo0axbRp0xqnKLz44otAwwj1woULN/nZcNeJo48+mt/85jesXLmSlStX8pvf/KbFEViA3/3ud+y7774MHDhwo/b169dz6623NgbIDS6++GJefvllfvSjH23UvmzZssbXs2bNYr/99gNg5cqVvPnmm0BDCP3Tn/5ETU0NAMcff3zjKPYf/vAH9tlnHwAWL17c+MvLgw8+2DjnfN26dY2fxaJFi1i0aBGf+MQniAhGjhzZ+P5vvPHGxnn1L7zwQuMvK//2b//G6aefvlHdrY3O33rrrRx33HH07du3se3JJ59kyZIlLFmyhHHjxnH11Vdz/PHHM3nyZJ5++mmWLFnC5Zdfzuc+9zm++93v8uqrrzZ+LmvXrmX27Nnsu+++m7z3v/3tb6xZs6bxmwhJktSgkiPUNwBXAje1sn40MKT08yHgmtJ/e6ShQ4fyyiuvMGDAAKqr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\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fpr,tpr, _= metrics.roc_curve(yvl,pred)\n",
    "auc = metrics.roc_auc_score(yvl,pred)\n",
    "plt.figure (figsize=(12,8))\n",
    "plt.plot(fpr,tpr,label=\"validation,auc=\" + str(auc))\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.legend(loc=2)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "train2[\"TotalIncome\"]=train2[\"ApplicantIncome\"]+train2[\"CoapplicantIncome\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "test[\"TotalIncome\"]=test[\"ApplicantIncome\"]+test[\"CoapplicantIncome\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1067e048>"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(train2[\"TotalIncome\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "train2[\"TotalIncomeLog\"]=np.log(train2[\"TotalIncome\"])\n",
    "test[\"TotalIncomeLog\"]=np.log(test[\"TotalIncome\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x10acdf28>"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(train2[\"TotalIncomeLog\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Loan_Status</th>\n",
       "      <th>LoanAmountLog</th>\n",
       "      <th>Gender_Female</th>\n",
       "      <th>Gender_Male</th>\n",
       "      <th>Married_No</th>\n",
       "      <th>Married_Yes</th>\n",
       "      <th>Dependents_3</th>\n",
       "      <th>Dependents_0</th>\n",
       "      <th>Dependents_1</th>\n",
       "      <th>Dependents_2</th>\n",
       "      <th>Education_Graduate</th>\n",
       "      <th>Education_Not Graduate</th>\n",
       "      <th>Self_Employed_No</th>\n",
       "      <th>Self_Employed_Yes</th>\n",
       "      <th>Property_Area_Rural</th>\n",
       "      <th>Property_Area_Semiurban</th>\n",
       "      <th>Property_Area_Urban</th>\n",
       "      <th>TotalIncome</th>\n",
       "      <th>TotalIncomeLog</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.852030</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5849.0</td>\n",
       "      <td>8.674026</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.852030</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6091.0</td>\n",
       "      <td>8.714568</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.189655</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>8.006368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.787492</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4941.0</td>\n",
       "      <td>8.505323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.948760</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6000.0</td>\n",
       "      <td>8.699515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.587249</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9613.0</td>\n",
       "      <td>9.170872</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.553877</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3849.0</td>\n",
       "      <td>8.255569</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.062595</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5540.0</td>\n",
       "      <td>8.619750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.123964</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5532.0</td>\n",
       "      <td>8.618305</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.855072</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>23809.0</td>\n",
       "      <td>10.077819</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.248495</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3900.0</td>\n",
       "      <td>8.268732</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.691348</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4340.0</td>\n",
       "      <td>8.375630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.298317</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>11179.0</td>\n",
       "      <td>9.321792</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.736198</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4693.0</td>\n",
       "      <td>8.453827</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2.833213</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2385.0</td>\n",
       "      <td>7.776954</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.828314</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4950.0</td>\n",
       "      <td>8.507143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.605170</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3596.0</td>\n",
       "      <td>8.187577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.330733</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3510.0</td>\n",
       "      <td>8.163371</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.890349</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4887.0</td>\n",
       "      <td>8.494334</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.744932</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6100.0</td>\n",
       "      <td>8.716044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.644391</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7660.0</td>\n",
       "      <td>8.943767</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.752573</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>11580.0</td>\n",
       "      <td>9.357035</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.753590</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4511.0</td>\n",
       "      <td>8.414274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.718499</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5282.0</td>\n",
       "      <td>8.572060</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.017280</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6642.0</td>\n",
       "      <td>8.801168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.252273</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>9560.0</td>\n",
       "      <td>9.165343</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.804021</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5052.0</td>\n",
       "      <td>8.527539</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.700480</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5266.0</td>\n",
       "      <td>8.569026</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>3.555348</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1442.0</td>\n",
       "      <td>7.273786</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.787492</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5833.0</td>\n",
       "      <td>8.671287</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>584</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.983607</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4704.0</td>\n",
       "      <td>8.456168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>585</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.147494</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7283.0</td>\n",
       "      <td>8.893298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>586</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.644391</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3819.0</td>\n",
       "      <td>8.247744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>587</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.248495</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2165.0</td>\n",
       "      <td>7.680176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>588</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.543295</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4750.0</td>\n",
       "      <td>8.465900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>589</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.663439</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2726.0</td>\n",
       "      <td>7.910591</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>590</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.025352</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6416.0</td>\n",
       "      <td>8.766550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>591</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.323010</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6000.0</td>\n",
       "      <td>8.699515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>592</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.676754</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>9357.0</td>\n",
       "      <td>9.143880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>593</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.955827</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7159.0</td>\n",
       "      <td>8.876126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>594</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.560682</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>16120.0</td>\n",
       "      <td>9.687816</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>595</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.700480</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3833.0</td>\n",
       "      <td>8.251403</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>596</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.231109</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7383.0</td>\n",
       "      <td>8.906935</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>597</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.477337</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2987.0</td>\n",
       "      <td>8.002025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>598</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.192957</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9963.0</td>\n",
       "      <td>9.206634</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>599</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.257495</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5780.0</td>\n",
       "      <td>8.662159</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>600</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.857933</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>42083.0</td>\n",
       "      <td>10.647399</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>601</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.043425</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5686.0</td>\n",
       "      <td>8.645762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>602</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.852030</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5703.0</td>\n",
       "      <td>8.648748</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>603</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.147494</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7977.0</td>\n",
       "      <td>8.984318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>604</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>6.206576</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>12000.0</td>\n",
       "      <td>9.392662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>605</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.852030</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6200.0</td>\n",
       "      <td>8.732305</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>606</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.153292</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5900.0</td>\n",
       "      <td>8.682708</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>607</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.056246</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5398.0</td>\n",
       "      <td>8.593784</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>608</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.682131</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5182.0</td>\n",
       "      <td>8.552946</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>609</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.262680</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2900.0</td>\n",
       "      <td>7.972466</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>610</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>3.688879</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4106.0</td>\n",
       "      <td>8.320205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>611</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.533389</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>8312.0</td>\n",
       "      <td>9.025456</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>612</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.231109</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7583.0</td>\n",
       "      <td>8.933664</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>613</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.890349</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4583.0</td>\n",
       "      <td>8.430109</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>614 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Credit_History  Loan_Status  LoanAmountLog  Gender_Female  Gender_Male  \\\n",
       "0               1.0            1       4.852030              0            1   \n",
       "1               1.0            0       4.852030              0            1   \n",
       "2               1.0            1       4.189655              0            1   \n",
       "3               1.0            1       4.787492              0            1   \n",
       "4               1.0            1       4.948760              0            1   \n",
       "5               1.0            1       5.587249              0            1   \n",
       "6               1.0            1       4.553877              0            1   \n",
       "7               0.0            0       5.062595              0            1   \n",
       "8               1.0            1       5.123964              0            1   \n",
       "9               1.0            0       5.855072              0            1   \n",
       "10              1.0            1       4.248495              0            1   \n",
       "11              1.0            1       4.691348              0            1   \n",
       "12              1.0            1       5.298317              0            1   \n",
       "13              1.0            0       4.736198              0            1   \n",
       "14              1.0            1       2.833213              0            1   \n",
       "15              1.0            1       4.828314              0            1   \n",
       "16              1.0            1       4.605170              0            1   \n",
       "17              0.0            0       4.330733              1            0   \n",
       "18              1.0            0       4.890349              0            1   \n",
       "19              1.0            1       4.744932              0            1   \n",
       "20              0.0            0       4.644391              0            1   \n",
       "21              1.0            1       5.752573              0            1   \n",
       "22              0.0            0       4.753590              0            1   \n",
       "23              0.0            0       4.718499              0            1   \n",
       "24              1.0            0       5.017280              0            1   \n",
       "25              1.0            1       5.252273              0            1   \n",
       "26              1.0            1       4.804021              0            1   \n",
       "27              1.0            1       4.700480              0            1   \n",
       "28              1.0            0       3.555348              0            1   \n",
       "29              1.0            1       4.787492              1            0   \n",
       "..              ...          ...            ...            ...          ...   \n",
       "584             0.0            0       4.983607              0            1   \n",
       "585             1.0            0       5.147494              0            1   \n",
       "586             1.0            1       4.644391              0            1   \n",
       "587             1.0            1       4.248495              1            0   \n",
       "588             1.0            1       4.543295              0            1   \n",
       "589             0.0            0       4.663439              0            1   \n",
       "590             1.0            1       4.025352              0            1   \n",
       "591             1.0            0       5.323010              0            1   \n",
       "592             1.0            1       5.676754              0            1   \n",
       "593             1.0            1       4.955827              0            1   \n",
       "594             1.0            1       5.560682              0            1   \n",
       "595             1.0            1       4.700480              0            1   \n",
       "596             1.0            0       5.231109              0            1   \n",
       "597             0.0            0       4.477337              0            1   \n",
       "598             1.0            1       5.192957              0            1   \n",
       "599             1.0            1       5.257495              0            1   \n",
       "600             1.0            0       5.857933              1            0   \n",
       "601             1.0            1       5.043425              0            1   \n",
       "602             1.0            1       4.852030              0            1   \n",
       "603             1.0            1       5.147494              0            1   \n",
       "604             1.0            1       6.206576              1            0   \n",
       "605             1.0            0       4.852030              0            1   \n",
       "606             1.0            1       5.153292              0            1   \n",
       "607             1.0            1       5.056246              0            1   \n",
       "608             1.0            1       4.682131              0            1   \n",
       "609             1.0            1       4.262680              1            0   \n",
       "610             1.0            1       3.688879              0            1   \n",
       "611             1.0            1       5.533389              0            1   \n",
       "612             1.0            1       5.231109              0            1   \n",
       "613             0.0            0       4.890349              1            0   \n",
       "\n",
       "     Married_No  Married_Yes  Dependents_3  Dependents_0  Dependents_1  \\\n",
       "0             1            0             0             1             0   \n",
       "1             0            1             0             0             1   \n",
       "2             0            1             0             1             0   \n",
       "3             0            1             0             1             0   \n",
       "4             1            0             0             1             0   \n",
       "5             0            1             0             0             0   \n",
       "6             0            1             0             1             0   \n",
       "7             0            1             1             0             0   \n",
       "8             0            1             0             0             0   \n",
       "9             0            1             0             0             1   \n",
       "10            0            1             0             0             0   \n",
       "11            0            1             0             0             0   \n",
       "12            0            1             0             0             0   \n",
       "13            1            0             0             1             0   \n",
       "14            0            1             0             0             0   \n",
       "15            1            0             0             1             0   \n",
       "16            1            0             0             0             1   \n",
       "17            1            0             0             1             0   \n",
       "18            0            1             0             1             0   \n",
       "19            0            1             0             1             0   \n",
       "20            0            1             0             1             0   \n",
       "21            0            1             0             0             1   \n",
       "22            0            1             0             1             0   \n",
       "23            0            1             0             0             0   \n",
       "24            0            1             0             0             1   \n",
       "25            0            1             0             1             0   \n",
       "26            0            1             0             1             0   \n",
       "27            0            1             0             0             0   \n",
       "28            1            0             0             1             0   \n",
       "29            1            0             0             0             0   \n",
       "..          ...          ...           ...           ...           ...   \n",
       "584           0            1             0             0             1   \n",
       "585           0            1             0             0             1   \n",
       "586           0            1             0             1             0   \n",
       "587           1            0             0             1             0   \n",
       "588           1            0             0             1             0   \n",
       "589           0            1             0             0             0   \n",
       "590           0            1             0             1             0   \n",
       "591           0            1             0             0             0   \n",
       "592           1            0             1             0             0   \n",
       "593           0            1             0             1             0   \n",
       "594           0            1             0             1             0   \n",
       "595           1            0             0             1             0   \n",
       "596           0            1             0             0             0   \n",
       "597           1            0             0             1             0   \n",
       "598           0            1             0             1             0   \n",
       "599           0            1             0             0             0   \n",
       "600           1            0             1             0             0   \n",
       "601           0            1             0             1             0   \n",
       "602           0            1             1             0             0   \n",
       "603           1            0             0             1             0   \n",
       "604           0            1             0             0             1   \n",
       "605           0            1             0             1             0   \n",
       "606           0            1             0             0             1   \n",
       "607           0            1             0             0             0   \n",
       "608           0            1             0             1             0   \n",
       "609           1            0             0             1             0   \n",
       "610           0            1             1             0             0   \n",
       "611           0            1             0             0             1   \n",
       "612           0            1             0             0             0   \n",
       "613           1            0             0             1             0   \n",
       "\n",
       "     Dependents_2  Education_Graduate  Education_Not Graduate  \\\n",
       "0               0                   1                       0   \n",
       "1               0                   1                       0   \n",
       "2               0                   1                       0   \n",
       "3               0                   0                       1   \n",
       "4               0                   1                       0   \n",
       "5               1                   1                       0   \n",
       "6               0                   0                       1   \n",
       "7               0                   1                       0   \n",
       "8               1                   1                       0   \n",
       "9               0                   1                       0   \n",
       "10              1                   1                       0   \n",
       "11              1                   1                       0   \n",
       "12              1                   1                       0   \n",
       "13              0                   1                       0   \n",
       "14              1                   1                       0   \n",
       "15              0                   1                       0   \n",
       "16              0                   0                       1   \n",
       "17              0                   1                       0   \n",
       "18              0                   0                       1   \n",
       "19              0                   1                       0   \n",
       "20              0                   0                       1   \n",
       "21              0                   1                       0   \n",
       "22              0                   0                       1   \n",
       "23              1                   0                       1   \n",
       "24              0                   1                       0   \n",
       "25              0                   1                       0   \n",
       "26              0                   1                       0   \n",
       "27              1                   0                       1   \n",
       "28              0                   0                       1   \n",
       "29              1                   1                       0   \n",
       "..            ...                 ...                     ...   \n",
       "584             0                   1                       0   \n",
       "585             0                   1                       0   \n",
       "586             0                   1                       0   \n",
       "587             0                   0                       1   \n",
       "588             0                   1                       0   \n",
       "589             1                   1                       0   \n",
       "590             0                   1                       0   \n",
       "591             1                   1                       0   \n",
       "592             0                   1                       0   \n",
       "593             0                   1                       0   \n",
       "594             0                   1                       0   \n",
       "595             0                   0                       1   \n",
       "596             1                   0                       1   \n",
       "597             0                   1                       0   \n",
       "598             0                   1                       0   \n",
       "599             1                   1                       0   \n",
       "600             0                   1                       0   \n",
       "601             0                   0                       1   \n",
       "602             0                   1                       0   \n",
       "603             0                   1                       0   \n",
       "604             0                   1                       0   \n",
       "605             0                   0                       1   \n",
       "606             0                   1                       0   \n",
       "607             1                   0                       1   \n",
       "608             0                   1                       0   \n",
       "609             0                   1                       0   \n",
       "610             0                   1                       0   \n",
       "611             0                   1                       0   \n",
       "612             1                   1                       0   \n",
       "613             0                   1                       0   \n",
       "\n",
       "     Self_Employed_No  Self_Employed_Yes  Property_Area_Rural  \\\n",
       "0                   1                  0                    0   \n",
       "1                   1                  0                    1   \n",
       "2                   0                  1                    0   \n",
       "3                   1                  0                    0   \n",
       "4                   1                  0                    0   \n",
       "5                   0                  1                    0   \n",
       "6                   1                  0                    0   \n",
       "7                   1                  0                    0   \n",
       "8                   1                  0                    0   \n",
       "9                   1                  0                    0   \n",
       "10                  1                  0                    0   \n",
       "11                  1                  0                    0   \n",
       "12                  1                  0                    0   \n",
       "13                  1                  0                    1   \n",
       "14                  1                  0                    0   \n",
       "15                  1                  0                    0   \n",
       "16                  1                  0                    0   \n",
       "17                  1                  0                    0   \n",
       "18                  1                  0                    1   \n",
       "19                  1                  0                    0   \n",
       "20                  1                  0                    0   \n",
       "21                  1                  0                    0   \n",
       "22                  1                  0                    0   \n",
       "23                  1                  0                    1   \n",
       "24                  1                  0                    0   \n",
       "25                  0                  1                    0   \n",
       "26                  1                  0                    0   \n",
       "27                  1                  0                    0   \n",
       "28                  1                  0                    0   \n",
       "29                  1                  0                    0   \n",
       "..                ...                ...                  ...   \n",
       "584                 1                  0                    1   \n",
       "585                 1                  0                    1   \n",
       "586                 1                  0                    0   \n",
       "587                 1                  0                    0   \n",
       "588                 1                  0                    0   \n",
       "589                 0                  1                    0   \n",
       "590                 1                  0                    0   \n",
       "591                 0                  1                    0   \n",
       "592                 0                  1                    0   \n",
       "593                 1                  0                    1   \n",
       "594                 0                  1                    0   \n",
       "595                 1                  0                    1   \n",
       "596                 0                  1                    1   \n",
       "597                 1                  0                    0   \n",
       "598                 0                  1                    1   \n",
       "599                 1                  0                    0   \n",
       "600                 1                  0                    0   \n",
       "601                 1                  0                    1   \n",
       "602                 1                  0                    0   \n",
       "603                 1                  0                    1   \n",
       "604                 1                  0                    0   \n",
       "605                 1                  0                    0   \n",
       "606                 1                  0                    0   \n",
       "607                 1                  0                    1   \n",
       "608                 1                  0                    1   \n",
       "609                 1                  0                    1   \n",
       "610                 1                  0                    1   \n",
       "611                 1                  0                    0   \n",
       "612                 1                  0                    0   \n",
       "613                 0                  1                    0   \n",
       "\n",
       "     Property_Area_Semiurban  Property_Area_Urban  TotalIncome  TotalIncomeLog  \n",
       "0                          0                    1       5849.0        8.674026  \n",
       "1                          0                    0       6091.0        8.714568  \n",
       "2                          0                    1       3000.0        8.006368  \n",
       "3                          0                    1       4941.0        8.505323  \n",
       "4                          0                    1       6000.0        8.699515  \n",
       "5                          0                    1       9613.0        9.170872  \n",
       "6                          0                    1       3849.0        8.255569  \n",
       "7                          1                    0       5540.0        8.619750  \n",
       "8                          0                    1       5532.0        8.618305  \n",
       "9                          1                    0      23809.0       10.077819  \n",
       "10                         0                    1       3900.0        8.268732  \n",
       "11                         0                    1       4340.0        8.375630  \n",
       "12                         0                    1      11179.0        9.321792  \n",
       "13                         0                    0       4693.0        8.453827  \n",
       "14                         0                    1       2385.0        7.776954  \n",
       "15                         0                    1       4950.0        8.507143  \n",
       "16                         0                    1       3596.0        8.187577  \n",
       "17                         0                    1       3510.0        8.163371  \n",
       "18                         0                    0       4887.0        8.494334  \n",
       "19                         0                    1       6100.0        8.716044  \n",
       "20                         0                    1       7660.0        8.943767  \n",
       "21                         0                    1      11580.0        9.357035  \n",
       "22                         1                    0       4511.0        8.414274  \n",
       "23                         0                    0       5282.0        8.572060  \n",
       "24                         1                    0       6642.0        8.801168  \n",
       "25                         1                    0       9560.0        9.165343  \n",
       "26                         1                    0       5052.0        8.527539  \n",
       "27                         0                    1       5266.0        8.569026  \n",
       "28                         0                    1       1442.0        7.273786  \n",
       "29                         1                    0       5833.0        8.671287  \n",
       "..                       ...                  ...          ...             ...  \n",
       "584                        0                    0       4704.0        8.456168  \n",
       "585                        0                    0       7283.0        8.893298  \n",
       "586                        0                    1       3819.0        8.247744  \n",
       "587                        1                    0       2165.0        7.680176  \n",
       "588                        1                    0       4750.0        8.465900  \n",
       "589                        1                    0       2726.0        7.910591  \n",
       "590                        1                    0       6416.0        8.766550  \n",
       "591                        1                    0       6000.0        8.699515  \n",
       "592                        1                    0       9357.0        9.143880  \n",
       "593                        0                    0       7159.0        8.876126  \n",
       "594                        0                    1      16120.0        9.687816  \n",
       "595                        0                    0       3833.0        8.251403  \n",
       "596                        0                    0       7383.0        8.906935  \n",
       "597                        1                    0       2987.0        8.002025  \n",
       "598                        0                    0       9963.0        9.206634  \n",
       "599                        0                    1       5780.0        8.662159  \n",
       "600                        0                    1      42083.0       10.647399  \n",
       "601                        0                    0       5686.0        8.645762  \n",
       "602                        0                    1       5703.0        8.648748  \n",
       "603                        0                    0       7977.0        8.984318  \n",
       "604                        1                    0      12000.0        9.392662  \n",
       "605                        0                    1       6200.0        8.732305  \n",
       "606                        1                    0       5900.0        8.682708  \n",
       "607                        0                    0       5398.0        8.593784  \n",
       "608                        0                    0       5182.0        8.552946  \n",
       "609                        0                    0       2900.0        7.972466  \n",
       "610                        0                    0       4106.0        8.320205  \n",
       "611                        0                    1       8312.0        9.025456  \n",
       "612                        0                    1       7583.0        8.933664  \n",
       "613                        1                    0       4583.0        8.430109  \n",
       "\n",
       "[614 rows x 20 columns]"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train2.drop([\"ApplicantIncome\",\"CoapplicantIncome\",\"LoanAmount\",\"Loan_Amount_Term\",],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>LoanAmountlog</th>\n",
       "      <th>Gender_Female</th>\n",
       "      <th>Gender_Male</th>\n",
       "      <th>Married_No</th>\n",
       "      <th>Married_Yes</th>\n",
       "      <th>Dependents_3</th>\n",
       "      <th>Dependents_0</th>\n",
       "      <th>Dependents_1</th>\n",
       "      <th>Dependents_2</th>\n",
       "      <th>Education_Graduate</th>\n",
       "      <th>Education_Not Graduate</th>\n",
       "      <th>Self_Employed_No</th>\n",
       "      <th>Self_Employed_Yes</th>\n",
       "      <th>Property_Area_Rural</th>\n",
       "      <th>Property_Area_Semiurban</th>\n",
       "      <th>Property_Area_Urban</th>\n",
       "      <th>TotalIncome</th>\n",
       "      <th>TotalIncomeLog</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.700480</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5720</td>\n",
       "      <td>8.651724</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.836282</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4576</td>\n",
       "      <td>8.428581</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.337538</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6800</td>\n",
       "      <td>8.824678</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.605170</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4886</td>\n",
       "      <td>8.494129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.356709</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3276</td>\n",
       "      <td>8.094378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.023881</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5587</td>\n",
       "      <td>8.628198</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.077537</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2226</td>\n",
       "      <td>7.707962</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.0</td>\n",
       "      <td>4.990433</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3881</td>\n",
       "      <td>8.263848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.634790</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>13633</td>\n",
       "      <td>9.520249</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.812184</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4800</td>\n",
       "      <td>8.476371</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.499810</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3091</td>\n",
       "      <td>8.036250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.087596</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3701</td>\n",
       "      <td>8.216358</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1.0</td>\n",
       "      <td>3.688879</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4166</td>\n",
       "      <td>8.334712</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.0</td>\n",
       "      <td>5.111988</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>12173</td>\n",
       "      <td>9.406976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.820282</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4666</td>\n",
       "      <td>8.448057</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.875197</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5667</td>\n",
       "      <td>8.642415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.298317</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7499</td>\n",
       "      <td>8.922525</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.836282</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4119</td>\n",
       "      <td>8.323366</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.703782</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>17142</td>\n",
       "      <td>9.749287</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.605170</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4770</td>\n",
       "      <td>8.470102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1.0</td>\n",
       "      <td>3.871201</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3508</td>\n",
       "      <td>8.162801</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1.0</td>\n",
       "      <td>3.332205</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2083</td>\n",
       "      <td>7.641564</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.615121</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3909</td>\n",
       "      <td>8.271037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.828314</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3765</td>\n",
       "      <td>8.233503</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.669881</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9780</td>\n",
       "      <td>9.188095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>0.0</td>\n",
       "      <td>4.997212</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24000</td>\n",
       "      <td>10.085809</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.941642</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5613</td>\n",
       "      <td>8.632841</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.616771</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>11250</td>\n",
       "      <td>9.328123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.043051</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4605</td>\n",
       "      <td>8.434898</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.828314</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5324</td>\n",
       "      <td>8.579980</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>337</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.779123</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3850</td>\n",
       "      <td>8.255828</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>338</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.465908</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5715</td>\n",
       "      <td>8.650850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>339</th>\n",
       "      <td>0.0</td>\n",
       "      <td>5.087596</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6666</td>\n",
       "      <td>8.804775</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>340</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.804021</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7454</td>\n",
       "      <td>8.916506</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>341</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.231109</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8247</td>\n",
       "      <td>9.017605</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>342</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.394449</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3522</td>\n",
       "      <td>8.166784</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>343</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.382027</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4700</td>\n",
       "      <td>8.455318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>344</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.170484</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6858</td>\n",
       "      <td>8.833171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.560682</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>8334</td>\n",
       "      <td>9.028099</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>346</th>\n",
       "      <td>0.0</td>\n",
       "      <td>4.890349</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5357</td>\n",
       "      <td>8.586159</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>347</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.248495</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2868</td>\n",
       "      <td>7.961370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>348</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.905275</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4798</td>\n",
       "      <td>8.475954</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>349</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.919981</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2796</td>\n",
       "      <td>7.935945</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>350</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.537334</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8667</td>\n",
       "      <td>9.067278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>351</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.663439</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>17283</td>\n",
       "      <td>9.757479</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>352</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.691348</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6727</td>\n",
       "      <td>8.813885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>353</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.787492</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8888</td>\n",
       "      <td>9.092457</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>354</th>\n",
       "      <td>0.0</td>\n",
       "      <td>5.062595</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5503</td>\n",
       "      <td>8.613049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>355</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.283204</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>8816</td>\n",
       "      <td>9.084324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>356</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.442651</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5727</td>\n",
       "      <td>8.652947</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>357</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.094345</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2500</td>\n",
       "      <td>7.824046</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>358</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.330733</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3132</td>\n",
       "      <td>8.049427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>359</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.023881</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6667</td>\n",
       "      <td>8.804925</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>360</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.564348</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>12805</td>\n",
       "      <td>9.457591</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>361</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.595120</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4436</td>\n",
       "      <td>8.397508</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>362</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.727388</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5786</td>\n",
       "      <td>8.663196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>363</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.744932</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4867</td>\n",
       "      <td>8.490233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>364</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.836282</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5243</td>\n",
       "      <td>8.564649</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>365</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.062595</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7393</td>\n",
       "      <td>8.908289</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>366</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.584967</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9200</td>\n",
       "      <td>9.126959</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>367 rows × 19 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Credit_History  LoanAmountlog  Gender_Female  Gender_Male  Married_No  \\\n",
       "0               1.0       4.700480              0            1           0   \n",
       "1               1.0       4.836282              0            1           0   \n",
       "2               1.0       5.337538              0            1           0   \n",
       "3               1.0       4.605170              0            1           0   \n",
       "4               1.0       4.356709              0            1           1   \n",
       "5               1.0       5.023881              0            1           0   \n",
       "6               1.0       4.077537              1            0           1   \n",
       "7               0.0       4.990433              0            1           0   \n",
       "8               1.0       5.634790              0            1           0   \n",
       "9               1.0       4.812184              0            1           1   \n",
       "10              1.0       4.499810              0            1           1   \n",
       "11              1.0       5.087596              0            1           0   \n",
       "12              1.0       3.688879              0            1           1   \n",
       "13              0.0       5.111988              0            1           0   \n",
       "14              1.0       4.820282              1            0           1   \n",
       "15              1.0       4.875197              0            1           1   \n",
       "16              1.0       5.298317              0            1           0   \n",
       "17              1.0       4.836282              0            1           0   \n",
       "18              1.0       5.703782              0            1           0   \n",
       "19              1.0       4.605170              0            1           1   \n",
       "20              1.0       3.871201              0            1           0   \n",
       "21              1.0       3.332205              1            0           1   \n",
       "22              1.0       4.615121              0            0           1   \n",
       "23              1.0       4.828314              1            0           1   \n",
       "24              1.0       5.669881              0            1           0   \n",
       "25              0.0       4.997212              0            1           1   \n",
       "26              1.0       4.941642              0            1           0   \n",
       "27              1.0       5.616771              0            1           0   \n",
       "28              1.0       4.043051              0            1           0   \n",
       "29              1.0       4.828314              0            1           1   \n",
       "..              ...            ...            ...          ...         ...   \n",
       "337             1.0       4.779123              0            1           0   \n",
       "338             1.0       4.465908              0            1           0   \n",
       "339             0.0       5.087596              1            0           1   \n",
       "340             1.0       4.804021              0            1           0   \n",
       "341             1.0       5.231109              0            1           1   \n",
       "342             1.0       4.394449              0            1           0   \n",
       "343             1.0       4.382027              0            1           0   \n",
       "344             1.0       5.170484              0            1           1   \n",
       "345             1.0       5.560682              0            1           0   \n",
       "346             0.0       4.890349              0            1           0   \n",
       "347             1.0       4.248495              0            1           1   \n",
       "348             1.0       4.905275              0            1           0   \n",
       "349             1.0       4.919981              0            1           0   \n",
       "350             1.0       5.537334              0            1           0   \n",
       "351             1.0       4.663439              0            1           1   \n",
       "352             1.0       4.691348              0            1           0   \n",
       "353             1.0       4.787492              0            1           0   \n",
       "354             0.0       5.062595              0            1           0   \n",
       "355             1.0       5.283204              0            1           0   \n",
       "356             1.0       4.442651              0            1           0   \n",
       "357             1.0       4.094345              0            1           1   \n",
       "358             1.0       4.330733              0            1           0   \n",
       "359             1.0       5.023881              0            1           1   \n",
       "360             1.0       4.564348              1            0           0   \n",
       "361             1.0       4.595120              0            1           0   \n",
       "362             1.0       4.727388              0            1           0   \n",
       "363             1.0       4.744932              0            1           0   \n",
       "364             1.0       4.836282              0            1           1   \n",
       "365             1.0       5.062595              0            1           0   \n",
       "366             1.0       4.584967              0            1           1   \n",
       "\n",
       "     Married_Yes  Dependents_3  Dependents_0  Dependents_1  Dependents_2  \\\n",
       "0              1             0             1             0             0   \n",
       "1              1             0             0             1             0   \n",
       "2              1             0             0             0             1   \n",
       "3              1             0             0             0             1   \n",
       "4              0             0             1             0             0   \n",
       "5              1             0             1             0             0   \n",
       "6              0             0             0             1             0   \n",
       "7              1             0             0             0             1   \n",
       "8              1             0             0             0             1   \n",
       "9              0             0             1             0             0   \n",
       "10             0             0             1             0             0   \n",
       "11             1             0             0             1             0   \n",
       "12             0             1             0             0             0   \n",
       "13             1             0             0             0             1   \n",
       "14             0             0             1             0             0   \n",
       "15             0             0             0             1             0   \n",
       "16             1             0             0             0             1   \n",
       "17             1             1             0             0             0   \n",
       "18             1             0             1             0             0   \n",
       "19             0             0             1             0             0   \n",
       "20             1             0             0             1             0   \n",
       "21             0             1             0             0             0   \n",
       "22             0             0             1             0             0   \n",
       "23             0             0             1             0             0   \n",
       "24             1             0             1             0             0   \n",
       "25             0             0             1             0             0   \n",
       "26             1             0             0             0             1   \n",
       "27             1             0             1             0             0   \n",
       "28             1             0             1             0             0   \n",
       "29             0             0             1             0             0   \n",
       "..           ...           ...           ...           ...           ...   \n",
       "337            1             0             1             0             0   \n",
       "338            1             0             0             1             0   \n",
       "339            0             0             1             0             0   \n",
       "340            1             0             1             0             0   \n",
       "341            0             0             1             0             0   \n",
       "342            1             1             0             0             0   \n",
       "343            1             0             0             1             0   \n",
       "344            0             0             1             0             0   \n",
       "345            1             1             0             0             0   \n",
       "346            1             0             1             0             0   \n",
       "347            0             0             1             0             0   \n",
       "348            1             0             0             0             1   \n",
       "349            1             0             1             0             0   \n",
       "350            1             0             0             0             1   \n",
       "351            0             0             1             0             0   \n",
       "352            1             0             1             0             0   \n",
       "353            1             0             1             0             0   \n",
       "354            1             1             0             0             0   \n",
       "355            1             1             0             0             0   \n",
       "356            1             0             0             1             0   \n",
       "357            0             0             1             0             0   \n",
       "358            1             0             0             0             1   \n",
       "359            0             0             1             0             0   \n",
       "360            1             0             1             0             0   \n",
       "361            1             0             0             1             0   \n",
       "362            1             1             0             0             0   \n",
       "363            1             0             1             0             0   \n",
       "364            0             0             1             0             0   \n",
       "365            1             0             1             0             0   \n",
       "366            0             0             1             0             0   \n",
       "\n",
       "     Education_Graduate  Education_Not Graduate  Self_Employed_No  \\\n",
       "0                     1                       0                 1   \n",
       "1                     1                       0                 1   \n",
       "2                     1                       0                 1   \n",
       "3                     1                       0                 1   \n",
       "4                     0                       1                 1   \n",
       "5                     0                       1                 0   \n",
       "6                     0                       1                 1   \n",
       "7                     0                       1                 1   \n",
       "8                     1                       0                 0   \n",
       "9                     0                       1                 1   \n",
       "10                    0                       1                 1   \n",
       "11                    1                       0                 0   \n",
       "12                    1                       0                 1   \n",
       "13                    1                       0                 0   \n",
       "14                    1                       0                 1   \n",
       "15                    1                       0                 1   \n",
       "16                    1                       0                 1   \n",
       "17                    1                       0                 1   \n",
       "18                    1                       0                 1   \n",
       "19                    1                       0                 1   \n",
       "20                    0                       1                 1   \n",
       "21                    0                       1                 1   \n",
       "22                    1                       0                 1   \n",
       "23                    0                       1                 1   \n",
       "24                    1                       0                 1   \n",
       "25                    1                       0                 1   \n",
       "26                    1                       0                 1   \n",
       "27                    1                       0                 1   \n",
       "28                    1                       0                 1   \n",
       "29                    1                       0                 1   \n",
       "..                  ...                     ...               ...   \n",
       "337                   1                       0                 1   \n",
       "338                   1                       0                 0   \n",
       "339                   1                       0                 1   \n",
       "340                   1                       0                 0   \n",
       "341                   1                       0                 0   \n",
       "342                   0                       1                 1   \n",
       "343                   1                       0                 1   \n",
       "344                   1                       0                 1   \n",
       "345                   1                       0                 1   \n",
       "346                   1                       0                 1   \n",
       "347                   0                       1                 1   \n",
       "348                   0                       1                 1   \n",
       "349                   1                       0                 0   \n",
       "350                   1                       0                 1   \n",
       "351                   1                       0                 1   \n",
       "352                   1                       0                 1   \n",
       "353                   1                       0                 1   \n",
       "354                   0                       1                 1   \n",
       "355                   1                       0                 1   \n",
       "356                   1                       0                 1   \n",
       "357                   1                       0                 1   \n",
       "358                   0                       1                 1   \n",
       "359                   1                       0                 1   \n",
       "360                   1                       0                 1   \n",
       "361                   1                       0                 1   \n",
       "362                   0                       1                 0   \n",
       "363                   1                       0                 1   \n",
       "364                   1                       0                 1   \n",
       "365                   1                       0                 1   \n",
       "366                   1                       0                 0   \n",
       "\n",
       "     Self_Employed_Yes  Property_Area_Rural  Property_Area_Semiurban  \\\n",
       "0                    0                    0                        0   \n",
       "1                    0                    0                        0   \n",
       "2                    0                    0                        0   \n",
       "3                    0                    0                        0   \n",
       "4                    0                    0                        0   \n",
       "5                    1                    0                        0   \n",
       "6                    0                    0                        1   \n",
       "7                    0                    1                        0   \n",
       "8                    0                    0                        0   \n",
       "9                    0                    0                        1   \n",
       "10                   0                    0                        0   \n",
       "11                   0                    0                        1   \n",
       "12                   0                    0                        0   \n",
       "13                   0                    0                        1   \n",
       "14                   0                    0                        1   \n",
       "15                   0                    0                        0   \n",
       "16                   0                    0                        0   \n",
       "17                   0                    0                        1   \n",
       "18                   0                    0                        0   \n",
       "19                   0                    0                        1   \n",
       "20                   0                    0                        0   \n",
       "21                   0                    0                        0   \n",
       "22                   0                    0                        0   \n",
       "23                   0                    0                        0   \n",
       "24                   0                    0                        0   \n",
       "25                   0                    1                        0   \n",
       "26                   0                    0                        0   \n",
       "27                   0                    0                        0   \n",
       "28                   0                    0                        1   \n",
       "29                   0                    0                        0   \n",
       "..                 ...                  ...                      ...   \n",
       "337                  0                    0                        0   \n",
       "338                  1                    1                        0   \n",
       "339                  0                    1                        0   \n",
       "340                  1                    0                        1   \n",
       "341                  1                    1                        0   \n",
       "342                  0                    1                        0   \n",
       "343                  0                    0                        0   \n",
       "344                  0                    1                        0   \n",
       "345                  0                    0                        0   \n",
       "346                  0                    1                        0   \n",
       "347                  0                    0                        0   \n",
       "348                  0                    0                        0   \n",
       "349                  1                    1                        0   \n",
       "350                  0                    1                        0   \n",
       "351                  0                    1                        0   \n",
       "352                  0                    0                        0   \n",
       "353                  0                    1                        0   \n",
       "354                  0                    0                        1   \n",
       "355                  0                    0                        0   \n",
       "356                  0                    0                        0   \n",
       "357                  0                    0                        0   \n",
       "358                  0                    1                        0   \n",
       "359                  0                    0                        1   \n",
       "360                  0                    0                        0   \n",
       "361                  0                    0                        1   \n",
       "362                  1                    0                        0   \n",
       "363                  0                    0                        0   \n",
       "364                  0                    0                        1   \n",
       "365                  0                    1                        0   \n",
       "366                  1                    1                        0   \n",
       "\n",
       "     Property_Area_Urban  TotalIncome  TotalIncomeLog  \n",
       "0                      1         5720        8.651724  \n",
       "1                      1         4576        8.428581  \n",
       "2                      1         6800        8.824678  \n",
       "3                      1         4886        8.494129  \n",
       "4                      1         3276        8.094378  \n",
       "5                      1         5587        8.628198  \n",
       "6                      0         2226        7.707962  \n",
       "7                      0         3881        8.263848  \n",
       "8                      1        13633        9.520249  \n",
       "9                      0         4800        8.476371  \n",
       "10                     1         3091        8.036250  \n",
       "11                     0         3701        8.216358  \n",
       "12                     1         4166        8.334712  \n",
       "13                     0        12173        9.406976  \n",
       "14                     0         4666        8.448057  \n",
       "15                     1         5667        8.642415  \n",
       "16                     1         7499        8.922525  \n",
       "17                     0         4119        8.323366  \n",
       "18                     1        17142        9.749287  \n",
       "19                     0         4770        8.470102  \n",
       "20                     1         3508        8.162801  \n",
       "21                     1         2083        7.641564  \n",
       "22                     1         3909        8.271037  \n",
       "23                     1         3765        8.233503  \n",
       "24                     1         9780        9.188095  \n",
       "25                     0        24000       10.085809  \n",
       "26                     1         5613        8.632841  \n",
       "27                     1        11250        9.328123  \n",
       "28                     0         4605        8.434898  \n",
       "29                     1         5324        8.579980  \n",
       "..                   ...          ...             ...  \n",
       "337                    1         3850        8.255828  \n",
       "338                    0         5715        8.650850  \n",
       "339                    0         6666        8.804775  \n",
       "340                    0         7454        8.916506  \n",
       "341                    0         8247        9.017605  \n",
       "342                    0         3522        8.166784  \n",
       "343                    1         4700        8.455318  \n",
       "344                    0         6858        8.833171  \n",
       "345                    1         8334        9.028099  \n",
       "346                    0         5357        8.586159  \n",
       "347                    1         2868        7.961370  \n",
       "348                    1         4798        8.475954  \n",
       "349                    0         2796        7.935945  \n",
       "350                    0         8667        9.067278  \n",
       "351                    0        17283        9.757479  \n",
       "352                    1         6727        8.813885  \n",
       "353                    0         8888        9.092457  \n",
       "354                    0         5503        8.613049  \n",
       "355                    1         8816        9.084324  \n",
       "356                    1         5727        8.652947  \n",
       "357                    1         2500        7.824046  \n",
       "358                    0         3132        8.049427  \n",
       "359                    0         6667        8.804925  \n",
       "360                    1        12805        9.457591  \n",
       "361                    0         4436        8.397508  \n",
       "362                    1         5786        8.663196  \n",
       "363                    1         4867        8.490233  \n",
       "364                    0         5243        8.564649  \n",
       "365                    0         7393        8.908289  \n",
       "366                    0         9200        9.126959  \n",
       "\n",
       "[367 rows x 19 columns]"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test.drop([\"ApplicantIncome\",\"CoapplicantIncome\",\"LoanAmount\",\"Loan_Amount_Term\"],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "X=train2.drop(\"Loan_Status\",axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "Y=train2[(\"Loan_Status\")]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "1 of kfold 5\n",
      "('accuracy_score', 0.7983870967741935)\n",
      "\n",
      "2 of kfold 5\n",
      "('accuracy_score', 0.8306451612903226)\n",
      "\n",
      "3 of kfold 5\n",
      "('accuracy_score', 0.8114754098360656)\n",
      "\n",
      "4 of kfold 5\n",
      "('accuracy_score', 0.7950819672131147)\n",
      "\n",
      "5 of kfold 5\n",
      "('accuracy_score', 0.8278688524590164)\n"
     ]
    }
   ],
   "source": [
    "i=1 \n",
    "kf = StratifiedKFold(n_splits=5,random_state=1,shuffle=True) \n",
    "for train_index,test_index in kf.split(X,Y):   \n",
    "    print('\\n{} of kfold {}'.format(i,kf.n_splits))     \n",
    "    xtr,xvl = X.loc[train_index],X.loc[test_index]     \n",
    "    ytr,yvl = Y[train_index],Y[test_index]\n",
    "    model = LogisticRegression(random_state=1)     \n",
    "    model.fit(xtr, ytr)     \n",
    "    pred_test = model.predict(xvl)     \n",
    "    score = accuracy_score(yvl,pred_test)     \n",
    "    print('accuracy_score',score)     \n",
    "    i+=1 \n",
    "pred_test = model.predict(test) \n",
    "pred=model.predict_proba(xvl)[:,1]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "1 of kfold 5\n",
      "('accuracy score', 0.6774193548387096)\n",
      "\n",
      "2 of kfold 5\n",
      "('accuracy score', 0.7258064516129032)\n",
      "\n",
      "3 of kfold 5\n",
      "('accuracy score', 0.7131147540983607)\n",
      "\n",
      "4 of kfold 5\n",
      "('accuracy score', 0.7131147540983607)\n",
      "\n",
      "5 of kfold 5\n",
      "('accuracy score', 0.7295081967213115)\n"
     ]
    }
   ],
   "source": [
    "i=1\n",
    "kf = StratifiedKFold(n_splits=5,random_state=1,shuffle=True)\n",
    "for train_index, test_index in kf.split(X,Y):\n",
    "    print (\"\\n{} of kfold {}\".format(i,kf.n_splits))\n",
    "    xtr,xvl = X.loc[train_index],X.loc[test_index]\n",
    "    ytr,yvl = Y.loc[train_index],Y.loc[test_index]\n",
    "    model = tree.DecisionTreeClassifier(random_state=1)\n",
    "    model.fit(xtr,ytr)\n",
    "    pred_test = model.predict(xvl)\n",
    "    score=accuracy_score(yvl,pred_test)\n",
    "    print (\"accuracy score\",score)\n",
    "    i+=1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "1 of kfold 5\n",
      "('accuracy_score', 0.7903225806451613)\n",
      "\n",
      "2 of kfold 5\n",
      "('accuracy_score', 0.8064516129032258)\n",
      "\n",
      "3 of kfold 5\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Elliot\\Anaconda2\\lib\\site-packages\\sklearn\\ensemble\\forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('accuracy_score', 0.7295081967213115)\n",
      "\n",
      "4 of kfold 5\n",
      "('accuracy_score', 0.7622950819672131)\n",
      "\n",
      "5 of kfold 5\n",
      "('accuracy_score', 0.7868852459016393)\n"
     ]
    }
   ],
   "source": [
    "i=1\n",
    "kf=StratifiedKFold(n_splits=5,random_state=1,shuffle=True)\n",
    "for train_index,test_index in kf.split(X,Y):\n",
    "    print (\"\\n{} of kfold {}\".format(i,kf.n_splits))\n",
    "    xtr,xvl= X.loc[train_index],X.loc[test_index]\n",
    "    ytr,yvl = Y.loc[train_index],Y.loc[test_index]\n",
    "    model=RandomForestClassifier(random_state=1,max_depth=10)\n",
    "    model.fit(xtr,ytr)\n",
    "    pred_test=model.predict(xvl)\n",
    "    score=accuracy_score(yvl,pred_test)\n",
    "    print (\"accuracy_score\",score)\n",
    "    i+=1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Elliot\\Anaconda2\\lib\\site-packages\\sklearn\\model_selection\\_split.py:2053: FutureWarning: You should specify a value for 'cv' instead of relying on the default value. The default value will change from 3 to 5 in version 0.22.\n",
      "  warnings.warn(CV_WARNING, FutureWarning)\n",
      "C:\\Users\\Elliot\\Anaconda2\\lib\\site-packages\\sklearn\\model_selection\\_search.py:841: DeprecationWarning: The default of the `iid` parameter will change from True to False in version 0.22 and will be removed in 0.24. This will change numeric results when test-set sizes are unequal.\n",
      "  DeprecationWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=None, error_score='raise',\n",
       "       estimator=RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\n",
       "            max_depth=None, max_features='auto', max_leaf_nodes=None,\n",
       "            min_impurity_decrease=0.0, min_impurity_split=None,\n",
       "            min_samples_leaf=1, min_samples_split=2,\n",
       "            min_weight_fraction_leaf=0.0, n_estimators=10, n_jobs=1,\n",
       "            oob_score=False, random_state=1, verbose=0, warm_start=False),\n",
       "       fit_params=None, iid=True, n_jobs=1,\n",
       "       param_grid={'n_estimators': [1, 21, 41, 61, 81, 101, 121, 141, 161, 181], 'max_depth': [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]},\n",
       "       pre_dispatch='2*n_jobs', refit=True, return_train_score='warn',\n",
       "       scoring=None, verbose=0)"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "paramgrid = {'max_depth': list(range(1, 20, 2)), 'n_estimators': list(range(1, 200, 20))}\n",
    "grid_search=GridSearchCV(RandomForestClassifier(random_state=1),paramgrid)\n",
    "x_train, x_cv, y_train, y_cv = train_test_split(X,y, test_size =0.3, random_state=1)\n",
    "# Fit the grid search model \n",
    "grid_search.fit(x_train,y_train)\n",
    "GridSearchCV(cv=None, error_score='raise',estimator=RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\\\n",
    "max_depth=None, max_features='auto', max_leaf_nodes=None,min_impurity_decrease=0.0, min_impurity_split=None,min_samples_leaf=1,\\\n",
    "min_samples_split=2,min_weight_fraction_leaf=0.0, n_estimators=10, n_jobs=1,oob_score=False, random_state=1, verbose=0, warm_start=False),fit_params=None, iid=True, n_jobs=1, \\\n",
    "param_grid={'max_depth': [1, 3, 5, 7, 9, 11, 13, 15, 17, 19],'n_estimators': [1, 21, 41, 61,81, 101, 121, 141, 161, 181]},pre_dispatch='2*n_jobs', refit=True, return_train_score='warn',scoring=None, verbose=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x11147f60>"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "importances=pd.Series(model.feature_importances_, index=X.columns)\n",
    "importances.plot(kind='barh', figsize=(12,8))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1112fe80>"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "importances.plot(kind='barh', figsize=(12,8))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>LoanAmountLog</th>\n",
       "      <th>Gender_Female</th>\n",
       "      <th>Gender_Male</th>\n",
       "      <th>Married_No</th>\n",
       "      <th>Married_Yes</th>\n",
       "      <th>...</th>\n",
       "      <th>Dependents_2</th>\n",
       "      <th>Education_Graduate</th>\n",
       "      <th>Education_Not Graduate</th>\n",
       "      <th>Self_Employed_No</th>\n",
       "      <th>Self_Employed_Yes</th>\n",
       "      <th>Property_Area_Rural</th>\n",
       "      <th>Property_Area_Semiurban</th>\n",
       "      <th>Property_Area_Urban</th>\n",
       "      <th>TotalIncome</th>\n",
       "      <th>TotalIncomeLog</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5849</td>\n",
       "      <td>0.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.852030</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5849.0</td>\n",
       "      <td>8.674026</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4583</td>\n",
       "      <td>1508.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.852030</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6091.0</td>\n",
       "      <td>8.714568</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.189655</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>8.006368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2583</td>\n",
       "      <td>2358.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.787492</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4941.0</td>\n",
       "      <td>8.505323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>6000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>141.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.948760</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6000.0</td>\n",
       "      <td>8.699515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5417</td>\n",
       "      <td>4196.0</td>\n",
       "      <td>267.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.587249</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9613.0</td>\n",
       "      <td>9.170872</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2333</td>\n",
       "      <td>1516.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.553877</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3849.0</td>\n",
       "      <td>8.255569</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>3036</td>\n",
       "      <td>2504.0</td>\n",
       "      <td>158.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.062595</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5540.0</td>\n",
       "      <td>8.619750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>4006</td>\n",
       "      <td>1526.0</td>\n",
       "      <td>168.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.123964</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5532.0</td>\n",
       "      <td>8.618305</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>12841</td>\n",
       "      <td>10968.0</td>\n",
       "      <td>349.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.855072</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>23809.0</td>\n",
       "      <td>10.077819</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "0             5849                0.0       128.0             360.0   \n",
       "1             4583             1508.0       128.0             360.0   \n",
       "2             3000                0.0        66.0             360.0   \n",
       "3             2583             2358.0       120.0             360.0   \n",
       "4             6000                0.0       141.0             360.0   \n",
       "5             5417             4196.0       267.0             360.0   \n",
       "6             2333             1516.0        95.0             360.0   \n",
       "7             3036             2504.0       158.0             360.0   \n",
       "8             4006             1526.0       168.0             360.0   \n",
       "9            12841            10968.0       349.0             360.0   \n",
       "\n",
       "   Credit_History  LoanAmountLog  Gender_Female  Gender_Male  Married_No  \\\n",
       "0             1.0       4.852030              0            1           1   \n",
       "1             1.0       4.852030              0            1           0   \n",
       "2             1.0       4.189655              0            1           0   \n",
       "3             1.0       4.787492              0            1           0   \n",
       "4             1.0       4.948760              0            1           1   \n",
       "5             1.0       5.587249              0            1           0   \n",
       "6             1.0       4.553877              0            1           0   \n",
       "7             0.0       5.062595              0            1           0   \n",
       "8             1.0       5.123964              0            1           0   \n",
       "9             1.0       5.855072              0            1           0   \n",
       "\n",
       "   Married_Yes  ...  Dependents_2  Education_Graduate  Education_Not Graduate  \\\n",
       "0            0  ...             0                   1                       0   \n",
       "1            1  ...             0                   1                       0   \n",
       "2            1  ...             0                   1                       0   \n",
       "3            1  ...             0                   0                       1   \n",
       "4            0  ...             0                   1                       0   \n",
       "5            1  ...             1                   1                       0   \n",
       "6            1  ...             0                   0                       1   \n",
       "7            1  ...             0                   1                       0   \n",
       "8            1  ...             1                   1                       0   \n",
       "9            1  ...             0                   1                       0   \n",
       "\n",
       "   Self_Employed_No  Self_Employed_Yes  Property_Area_Rural  \\\n",
       "0                 1                  0                    0   \n",
       "1                 1                  0                    1   \n",
       "2                 0                  1                    0   \n",
       "3                 1                  0                    0   \n",
       "4                 1                  0                    0   \n",
       "5                 0                  1                    0   \n",
       "6                 1                  0                    0   \n",
       "7                 1                  0                    0   \n",
       "8                 1                  0                    0   \n",
       "9                 1                  0                    0   \n",
       "\n",
       "   Property_Area_Semiurban  Property_Area_Urban  TotalIncome  TotalIncomeLog  \n",
       "0                        0                    1       5849.0        8.674026  \n",
       "1                        0                    0       6091.0        8.714568  \n",
       "2                        0                    1       3000.0        8.006368  \n",
       "3                        0                    1       4941.0        8.505323  \n",
       "4                        0                    1       6000.0        8.699515  \n",
       "5                        0                    1       9613.0        9.170872  \n",
       "6                        0                    1       3849.0        8.255569  \n",
       "7                        1                    0       5540.0        8.619750  \n",
       "8                        0                    1       5532.0        8.618305  \n",
       "9                        1                    0      23809.0       10.077819  \n",
       "\n",
       "[10 rows x 23 columns]"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [],
   "source": [
    "from xgboost import XGBClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " 1 of kfold 5\n",
      "('accuracy_score', 0.782258064516129)\n",
      "\n",
      " 2 of kfold 5\n",
      "('accuracy_score', 0.8145161290322581)\n",
      "\n",
      " 3 of kfold 5\n",
      "('accuracy_score', 0.7622950819672131)\n",
      "\n",
      " 4 of kfold 5\n",
      "('accuracy_score', 0.7868852459016393)\n",
      "\n",
      " 5 of kfold 5\n",
      "('accuracy_score', 0.8360655737704918)\n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "feature_names mismatch: [u'ApplicantIncome', u'CoapplicantIncome', u'LoanAmount', u'Loan_Amount_Term', u'Credit_History', u'LoanAmountLog', u'Gender_Female', u'Gender_Male', u'Married_No', u'Married_Yes', u'Dependents_3', u'Dependents_0', u'Dependents_1', u'Dependents_2', u'Education_Graduate', u'Education_Not Graduate', u'Self_Employed_No', u'Self_Employed_Yes', u'Property_Area_Rural', u'Property_Area_Semiurban', u'Property_Area_Urban', u'TotalIncome', u'TotalIncomeLog'] [u'ApplicantIncome', u'CoapplicantIncome', u'LoanAmount', u'Loan_Amount_Term', u'Credit_History', u'LoanAmountlog', u'Gender_Female', u'Gender_Male', u'Married_No', u'Married_Yes', u'Dependents_3', u'Dependents_0', u'Dependents_1', u'Dependents_2', u'Education_Graduate', u'Education_Not Graduate', u'Self_Employed_No', u'Self_Employed_Yes', u'Property_Area_Rural', u'Property_Area_Semiurban', u'Property_Area_Urban', u'TotalIncome', u'TotalIncomeLog']\nexpected LoanAmountLog in input data\ntraining data did not have the following fields: LoanAmountlog",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-83-e4f2175c2df6>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[0;32m     11\u001b[0m     \u001b[1;32mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'accuracy_score'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mscore\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     12\u001b[0m     \u001b[0mi\u001b[0m\u001b[1;33m+=\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 13\u001b[1;33m \u001b[0mpred_test\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mtest\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     14\u001b[0m \u001b[0mpred3\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mmodel\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mpredict_proba\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mtest\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\Users\\Elliot\\Anaconda2\\lib\\site-packages\\xgboost\\sklearn.pyc\u001b[0m in \u001b[0;36mpredict\u001b[1;34m(self, data, output_margin, ntree_limit, validate_features)\u001b[0m\n\u001b[0;32m    770\u001b[0m                                                  \u001b[0moutput_margin\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0moutput_margin\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    771\u001b[0m                                                  \u001b[0mntree_limit\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mntree_limit\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 772\u001b[1;33m                                                  validate_features=validate_features)\n\u001b[0m\u001b[0;32m    773\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0moutput_margin\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    774\u001b[0m             \u001b[1;31m# If output_margin is active, simply return the scores\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\Users\\Elliot\\Anaconda2\\lib\\site-packages\\xgboost\\core.pyc\u001b[0m in \u001b[0;36mpredict\u001b[1;34m(self, data, output_margin, ntree_limit, pred_leaf, pred_contribs, approx_contribs, pred_interactions, validate_features)\u001b[0m\n\u001b[0;32m   1283\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1284\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mvalidate_features\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1285\u001b[1;33m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_validate_features\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1286\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1287\u001b[0m         \u001b[0mlength\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mc_bst_ulong\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\Users\\Elliot\\Anaconda2\\lib\\site-packages\\xgboost\\core.pyc\u001b[0m in \u001b[0;36m_validate_features\u001b[1;34m(self, data)\u001b[0m\n\u001b[0;32m   1690\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1691\u001b[0m                 raise ValueError(msg.format(self.feature_names,\n\u001b[1;32m-> 1692\u001b[1;33m                                             data.feature_names))\n\u001b[0m\u001b[0;32m   1693\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1694\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0mget_split_value_histogram\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mfeature\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mfmap\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m''\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mbins\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mNone\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mas_pandas\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mTrue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mValueError\u001b[0m: feature_names mismatch: [u'ApplicantIncome', u'CoapplicantIncome', u'LoanAmount', u'Loan_Amount_Term', u'Credit_History', u'LoanAmountLog', u'Gender_Female', u'Gender_Male', u'Married_No', u'Married_Yes', u'Dependents_3', u'Dependents_0', u'Dependents_1', u'Dependents_2', u'Education_Graduate', u'Education_Not Graduate', u'Self_Employed_No', u'Self_Employed_Yes', u'Property_Area_Rural', u'Property_Area_Semiurban', u'Property_Area_Urban', u'TotalIncome', u'TotalIncomeLog'] [u'ApplicantIncome', u'CoapplicantIncome', u'LoanAmount', u'Loan_Amount_Term', u'Credit_History', u'LoanAmountlog', u'Gender_Female', u'Gender_Male', u'Married_No', u'Married_Yes', u'Dependents_3', u'Dependents_0', u'Dependents_1', u'Dependents_2', u'Education_Graduate', u'Education_Not Graduate', u'Self_Employed_No', u'Self_Employed_Yes', u'Property_Area_Rural', u'Property_Area_Semiurban', u'Property_Area_Urban', u'TotalIncome', u'TotalIncomeLog']\nexpected LoanAmountLog in input data\ntraining data did not have the following fields: LoanAmountlog"
     ]
    }
   ],
   "source": [
    "i=1\n",
    "kf=StratifiedKFold(n_splits=5,random_state=1,shuffle=True)\n",
    "for train_index, test_index in kf.split(X,Y):\n",
    "    print \"\\n {} of kfold {}\".format(i,kf.n_splits)\n",
    "    xtr,xvl = X.loc[train_index],X.loc[test_index]\n",
    "    ytr,yvl= Y.loc[train_index],Y.loc[test_index]\n",
    "    model=XGBClassifier(n_estimators=50,max_depth=4)\n",
    "    model.fit(xtr,ytr)\n",
    "    pred_test = model.predict(xvl)\n",
    "    score = accuracy_score(yvl,pred_test)\n",
    "    print('accuracy_score',score)\n",
    "    i+=1\n",
    "pred_test = model.predict(test) \n",
    "pred3=model.predict_proba(test)[:,1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.16"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
